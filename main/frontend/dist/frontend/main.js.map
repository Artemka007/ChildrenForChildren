{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/account-nav/account-nav.component.ts","./src/app/account-nav/account-nav.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/business/actions/account.actions.ts","./src/app/business/actions/chats.actions.ts","./src/app/business/actions/ui.actions.ts","./src/app/business/index.ts","./src/app/business/reducers/account.reducer.ts","./src/app/business/reducers/chat.reducer.ts","./src/app/business/reducers/ui.reducer.ts","./src/app/chat-message/chat-message.component.ts","./src/app/chat-message/chat-message.component.html","./src/app/chats/chats.component.ts","./src/app/chats/chats.component.html","./src/app/create-offer/create-offer.component.ts","./src/app/create-offer/create-offer.component.html","./src/app/form-switcher/form-switcher.component.ts","./src/app/form-switcher/form-switcher.component.html","./src/app/guards/auth.guard.ts","./src/app/hamburger/hamburger.component.ts","./src/app/hamburger/hamburger.component.html","./src/app/head/head.component.ts","./src/app/head/head.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/image-slider/image-slider.component.ts","./src/app/image-slider/image-slider.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/logout/logout.component.ts","./src/app/logout/logout.component.html","./src/app/models/user.model.ts","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/offer-detail/offer-detail.component.ts","./src/app/offer-detail/offer-detail.component.html","./src/app/offer/offer.component.ts","./src/app/offer/offer.component.html","./src/app/offers/offers.component.ts","./src/app/offers/offers.component.html","./src/app/personal-area/personal-area.component.ts","./src/app/personal-area/personal-area.component.html","./src/app/progress-bar/progress-bar.component.ts","./src/app/progress-bar/progress-bar.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/reset-password-confirm/reset-password-confirm.component.ts","./src/app/reset-password-confirm/reset-password-confirm.component.html","./src/app/reset-password/reset-password.component.ts","./src/app/reset-password/reset-password.component.html","./src/app/search-users/search-users.component.ts","./src/app/search-users/search-users.component.html","./src/app/services/account.service.ts","./src/app/services/chat.service.ts","./src/app/services/offers.service.ts","./src/app/services/ui.service.ts","./src/app/services/websocket.service.ts","./src/app/warning-window/warning-window.component.ts","./src/app/warning-window/warning-window.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'account-nav',\n  templateUrl: './account-nav.component.html',\n  styleUrls: ['./account-nav.component.sass']\n})\nexport class AccountNavComponent implements OnInit {\n\n  navItems = [\n    {text: \"Авторизация\", to: \"/login\"},\n    {text: \"Регистрация\", to: \"/register\"}\n  ]\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"Account-Nav__Item\" *ngFor=\"let i of navItems\">\n    <a [routerLink]=\"i.to\" routerLinkActive=\"Active\">{{i.text}}</a>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ChatsComponent } from './chats/chats.component';\nimport { AuthGuard } from './guards/auth.guard';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { OffersComponent } from './offers/offers.component';\nimport { PersonalAreaComponent } from './personal-area/personal-area.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ResetPasswordConfirmComponent } from './reset-password-confirm/reset-password-confirm.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\nimport { SearchUsersComponent } from './search-users/search-users.component';\n\nconst routes: Routes = [\n {path: \"home\", component: HomeComponent, canActivate: [AuthGuard]},\n {path: \"login\", component: LoginComponent},\n {path: \"logout\", component: LogoutComponent, canActivate: [AuthGuard]},\n {path: \"register\", component: RegisterComponent},\n {path: \"reset-password\", component: ResetPasswordComponent},\n {path: \"reset-password/confirm/:uid/:token\", component: ResetPasswordConfirmComponent},\n {path: \"profile\", component: PersonalAreaComponent, canActivate: [AuthGuard]},\n {path: \"users\", component: SearchUsersComponent, canActivate: [AuthGuard]},\n {path: \"chats\", component: ChatsComponent, canActivate: [AuthGuard]},\n {path: \"offers\", component: OffersComponent, canActivate: [AuthGuard]},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { AppState } from './business';\nimport { SetUser } from './business/actions/account.actions';\nimport { SetUserChats } from './business/actions/chats.actions';\nimport { IChat } from './models/chat.model';\nimport { Profile, User } from './models/user.model';\nimport { AccountService } from './services/account.service';\nimport { ChatService, WSMessage } from './services/chat.service';\nimport { WebsocketService } from './services/websocket.service';\nimport { Warning } from './warning-window/warning-window.component';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\nexport class AppComponent implements OnInit {\n  title = 'frontend';\n\n  user?: User\n\n  warnings: Warning[] = []\n\n  constructor(\n    private _router: Router,\n    private _store: Store<AppState>,\n    private _accountService: AccountService,\n    private _chatService: ChatService,\n  ) {\n    this._getUser()\n    this._getChats()\n    this._router.events.subscribe((e) => {\n      if (e instanceof NavigationEnd) {\n        this._getUser()\n        this._getChats()\n      }\n    })\n    this._store.subscribe(data => {\n      this.user = data.account.user\n      this.warnings = data.ui.warningMessages\n    })\n  }\n\n  ngOnInit() {\n  }\n\n  private _getUser() {\n    this._accountService.getUser().subscribe(data => {\n      let JSONUser = data.data.user\n      if (!JSONUser) {\n        let path = location.pathname.split(\"/\")[1]\n        if (location.pathname === \"/\" || path === \"home\" || path === \"news\" || path === \"events\" || path === \"chats\" || path === \"chat\" || path === \"profile\") {\n          console.log(location.pathname.split(\"/\")[1])\n          this._router.navigateByUrl(\"login\")\n        }\n      }\n      else {\n        let {id, username, email, first_name, last_name, profile} = JSONUser\n        let {user, patronymic, age, phone, user_in_school_status, status, country, city, about_me} = profile\n        let p = new Profile(profile.id, user, phone, patronymic, age, user_in_school_status, status, country, city, about_me)\n        let u = new User(id, username, email, first_name, last_name, p)\n        this._store.dispatch(new SetUser(u))\n        this.user = u\n        if (location.pathname === \"/\") {\n          this._router.navigateByUrl(\"home\")\n        } \n      }\n    })\n  }\n\n  private _getChats() {\n    this._chatService.getUserChats().subscribe(data => {\n      if (data.result && data.data.chats) {\n        this._store.dispatch(new SetUserChats(data.data.chats))\n      } else {\n        console.error(data.message)\n      }\n    })\n  }\n}\n","<navbar [Content]=\"Content\" *ngIf=\"user\"></navbar>\n<div #Content class=\"C \" [style.marginLeft]=\"user ? '320px' : 0 \">\n    <headerbar *ngIf=\"user \"></headerbar>\n    <router-outlet></router-outlet>\n</div>\n<warning *ngFor=\"let i of warnings\" [warning]=\"i\" [ngClass]=\"i?.class || ''\"></warning>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { StoreModule } from '@ngrx/store';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { HeadComponent } from './head/head.component';\r\nimport { reducers } from './business';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { LogoutComponent } from './logout/logout.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\r\nimport { ResetPasswordConfirmComponent } from './reset-password-confirm/reset-password-confirm.component';\r\nimport { AccountNavComponent } from './account-nav/account-nav.component';\r\nimport { PersonalAreaComponent } from './personal-area/personal-area.component';\r\nimport { FormSwitcherComponent } from './form-switcher/form-switcher.component';\r\nimport { ChatsComponent } from './chats/chats.component';\r\nimport { Subject } from 'rxjs';\r\nimport { ChatMessageComponent } from './chat-message/chat-message.component';\r\nimport { ProgressBarComponent } from './progress-bar/progress-bar.component';\r\nimport { ImageSliderComponent } from './image-slider/image-slider.component';\r\nimport { SearchUsersComponent } from './search-users/search-users.component';\r\nimport { HamburgerComponent } from './hamburger/hamburger.component';\r\nimport { OffersComponent } from './offers/offers.component';\r\nimport { OfferComponent } from './offer/offer.component';\r\nimport { WarningWindowComponent } from './warning-window/warning-window.component';\r\nimport { CreateOfferComponent } from './create-offer/create-offer.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { OfferDetailComponent } from './offer-detail/offer-detail.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    NavbarComponent,\r\n    HeadComponent,\r\n    LoginComponent,\r\n    LogoutComponent,\r\n    RegisterComponent,\r\n    ResetPasswordComponent,\r\n    ResetPasswordConfirmComponent,\r\n    AccountNavComponent,\r\n    PersonalAreaComponent,\r\n    FormSwitcherComponent,\r\n    ChatsComponent,\r\n    ChatMessageComponent,\r\n    ProgressBarComponent,\r\n    ImageSliderComponent,\r\n    SearchUsersComponent,\r\n    HamburgerComponent,\r\n    OffersComponent,\r\n    OfferComponent,\r\n    WarningWindowComponent,\r\n    CreateOfferComponent,\r\n    OfferDetailComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    StoreModule,\r\n    StoreModule.forRoot(reducers)\r\n  ],\r\n  providers: [\r\n    Subject\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Action, createAction, props } from '@ngrx/store';\r\nimport { User } from 'src/app/models/user.model';\r\n\r\nexport enum AccountActions {\r\n    SetUser = '[Account Page] Set User',\r\n}\r\n\r\nexport class SetUser implements Action {\r\n    readonly type = AccountActions.SetUser\r\n\r\n    constructor(public user?: User) { }\r\n}\r\n\r\nexport type AccountUnion = SetUser","import { Action, createAction, props } from '@ngrx/store';\r\nimport { IChat } from 'src/app/models/chat.model';\r\n\r\nexport enum ChatsActions {\r\n    SetUserChats = '[Chats Page] Set User Chats',\r\n}\r\n\r\nexport class SetUserChats implements Action {\r\n    readonly type = ChatsActions.SetUserChats\r\n\r\n    constructor(public chats: IChat[]) { }\r\n}\r\n\r\nexport type ChatsUnion = SetUserChats","import { Action } from \"@ngrx/store\";\r\nimport { Warning } from \"src/app/warning-window/warning-window.component\";\r\n\r\nexport enum UIActions {\r\n    OpenWarning = \"[UI Page] Open Warning Window\",\r\n    CloseWarning = \"[UI Page] Close Warning Window\"\r\n}\r\n\r\nexport class OpenWarningWindow implements Action {\r\n    readonly type = UIActions.OpenWarning\r\n\r\n    constructor(public message?: Warning) { }\r\n}\r\n\r\nexport class CloseWarningWindow implements Action {\r\n    readonly type = UIActions.CloseWarning\r\n\r\n    constructor(public message?: Warning) { }\r\n}\r\n\r\nexport type UIUnion = OpenWarningWindow | CloseWarningWindow","import { ActionReducerMap } from '@ngrx/store'\r\nimport { accountReducer, AccountState } from './reducers/account.reducer'\r\nimport { chatsReducer, ChatsState } from './reducers/chat.reducer'\r\nimport { UIReducer, UIState } from './reducers/ui.reducer'\r\n\r\nexport const rootReducer = {}\r\n\r\nexport interface AppState {\r\n  account: AccountState\r\n  chats: ChatsState\r\n  ui: UIState\r\n}\r\n\r\nexport const reducers: ActionReducerMap<AppState, any> = {\r\n  account: accountReducer,\r\n  chats: chatsReducer,\r\n  ui: UIReducer\r\n}","import { AccountActions, AccountUnion } from '../actions/account.actions';\r\nimport { User } from '../../models/user.model'; \r\n\r\nexport interface AccountState {\r\n    user?: User\r\n}\r\n\r\nexport const initialState: AccountState = {\r\n    user: undefined\r\n}\r\n \r\nexport function accountReducer(state: AccountState = initialState, action: AccountUnion): AccountState {\r\n  switch (action.type) {\r\n    case AccountActions.SetUser:\r\n      return {\r\n        user: action.user,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n  ","import { IChat } from \"src/app/models/chat.model\";\r\nimport { ChatsActions, ChatsUnion } from \"../actions/chats.actions\";\r\n\r\nexport interface ChatsState {\r\n    chats: IChat[]\r\n}\r\n\r\nexport const initialState: ChatsState = {\r\n    chats: []\r\n}\r\n \r\nexport function chatsReducer(state: ChatsState = initialState, action: ChatsUnion): ChatsState {\r\n    switch (action.type) {\r\n      case ChatsActions.SetUserChats:\r\n        return {\r\n          chats: action.chats,\r\n        }\r\n      default:\r\n        return state\r\n    }\r\n}","import { Warning } from \"src/app/warning-window/warning-window.component\";\r\nimport { UIActions, UIUnion } from \"../actions/ui.actions\";\r\n\r\nexport interface UIState {\r\n    warningMessages: Warning[]\r\n}\r\n\r\nconst initialState: UIState = {\r\n    warningMessages: []\r\n}\r\n\r\nexport function UIReducer(state: UIState = initialState, action: UIUnion) {\r\n    switch (action.type) {\r\n        case UIActions.OpenWarning: {\r\n            let stateCopy = {...initialState},\r\n                messagesCopy = [...stateCopy.warningMessages]\r\n            if (action.message){\r\n                let messageCopy = {...action.message}\r\n                messageCopy.id = stateCopy.warningMessages.length\r\n                messagesCopy.push(messageCopy)\r\n                stateCopy.warningMessages = messagesCopy\r\n            }\r\n            return stateCopy\r\n        }\r\n\r\n        case UIActions.CloseWarning: {\r\n            let stateCopy = {...initialState},\r\n                messagesCopy = [...stateCopy.warningMessages]\r\n            if (action.message){\r\n                messagesCopy.splice(action.message.id || -1, 1)\r\n                stateCopy.warningMessages = messagesCopy\r\n            }\r\n            return stateCopy\r\n        }\r\n\r\n        default: \r\n            return initialState\r\n    } \r\n}","import { Component, Input,EventEmitter, OnInit, Output } from '@angular/core';\nimport { IMessage } from '../models/chat.model';\n\n@Component({\n  selector: 'chat-message',\n  templateUrl: './chat-message.component.html',\n  styleUrls: ['./chat-message.component.sass']\n})\nexport class ChatMessageComponent implements OnInit {\n  @Input()\n  message?: IMessage\n\n  @Input()\n  userId: number = -1\n\n  @Output()\n  openSlider = new EventEmitter<{id: number, urls: string[]}>()\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  checkMessageIsFromUser() {\n    return this.message?.user.id === this.userId\n  }\n\n  checkUserIsReadMessage() {\n    let r = this.message?.readers\n    return r ? r.includes(this.userId) && r.length > 1 : false\n  }\n\n  spliceFileURL(path: string) {\n    let a = path.split('/')\n    let str = a[a.length - 1]\n    let type = '.' + str.split('.')[1]\n    return a[a.length - 1].substr(0, 23) + '...'\n  }\n\n  openImagesSlider(id: number) {\n    this.openSlider.emit({id, urls: this.message?.imgs.map(i => i.file) || []})\n  }\n}\n","<div class=\"Message-Container\" *ngIf=\"message\" [style.justifyContent]=\"checkMessageIsFromUser() ? 'flex-end' : 'flex-start'\">\n    <span class=\"Message-Is-Read\" *ngIf=\"!checkUserIsReadMessage() && checkMessageIsFromUser()\"></span>\n    <div class=\"Message__Ava\"></div>\n    <div class=\"Message\" [ngClass]=\"{'not-from-user': !checkMessageIsFromUser()}\">\n        <div class=\"Message__Images\" *ngFor=\"let i of message.imgs\">\n            <div class=\"Item\" [style.backgroundImage]=\"'url(' + i.file + ')'\" (click)=\"openImagesSlider(message.imgs.indexOf(i))\"></div>\n        </div>\n        <div class=\"Message__Body\">{{message.body}}</div>\n        <div class=\"Message__Docs\" *ngIf=\"message.docs.length > 0\">\n            <a [href]=\"i.file\" class=\"Item\" *ngFor=\"let i of message.docs\">\n                <div class=\"Icon\"><i></i></div>\n                <div class=\"Name\">{{i.name ? spliceFileURL(i.name) : spliceFileURL(i.file)}}</div>\n            </a>\n        </div>\n        <div class=\"Message__Date\">{{message.date | date : \"dd.MM.y HH:mm\" : \"UTC-3\"}}</div>\n    </div>\n</div>","import { Component, ElementRef, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\nimport { IChat, ICreateChat, ICreateMessage, IEditChat } from '../models/chat.model';\nimport { ChatService } from '../services/chat.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../business';\nimport { IUser, User } from '../models/user.model';\nimport { SetUserChats } from '../business/actions/chats.actions';\nimport { ChatMessageComponent } from '../chat-message/chat-message.component';\nimport { HttpEventType } from '@angular/common/http';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'chats',\n  templateUrl: './chats.component.html',\n  styleUrls: ['./chats.component.sass']\n})\nexport class ChatsComponent implements OnInit {\n  @ViewChild(\"chatBody\", {static: false})\n  chatBody?: ElementRef<HTMLDivElement>\n\n  @ViewChildren(\"chatMessage\")\n  chatMessages?: QueryList<ChatMessageComponent>\n\n  intervalRef?: any\n\n  writingUsers: IUser[] = []\n\n  chat_id?: number\n  user?: User\n  chat?: IChat\n  chats: IChat[] = []\n  chatInfoIsOpen: boolean = false\n  chatNavIsOpen: boolean = false\n\n  message: ICreateMessage = {\n    user: -1,\n    chat: -1,\n    body: \"\",\n    is_forwarded: false,\n    imgs: [],\n    docs: []\n  }\n\n  uploadigFiles: {id?: number, type: \"img\" | \"doc\", name: string, progress: number, progressColor?: string}[] = []\n\n  chatForEdit: IEditChat = {\n    photo:  undefined,\n    title:  undefined,\n    about:  undefined,\n    users:         [],\n    moderators:    [],\n    banned_list:   [],\n    is_private: false,\n  }\n  isEditing: boolean = false\n\n  uploadSubscription?: Subscription\n\n  imageIdForImageSlider: number = 0\n  imagesForImageSlider: string[] = []\n  imageSliderIsOpen: boolean = false\n\n  constructor (\n    private _router: Router,\n    private _route: ActivatedRoute,\n    private _chat: ChatService,\n    private _store: Store<AppState>\n  ) {\n    _store.subscribe(data => {\n      this.user = data.account.user\n      this.chats = data.chats.chats\n      this.message[\"user\"] = this.user?.id || -1\n      _route.queryParams.subscribe(p => {\n        let id = parseInt(p[\"id\"])\n        if (id) {\n          this.chat = data.chats.chats.find(i => i.id === id)\n          if (this.chat) {\n            let {title, about, users, banned_list, moderators, is_private} = this.chat\n            this.chatForEdit = {photo: undefined, title, about, users: users.map(i => {return i.id}), moderators, banned_list, is_private}\n            this.message[\"chat\"] = id\n            this.chatBody && this.scroll(this.chatBody.nativeElement)\n            this._chat.readMessage(id)\n          }\n        } else {\n          this.chatNavIsOpen = true\n        }\n      })\n    })\n  }\n\n  ngOnInit(): void {\n    this._route.queryParams.subscribe(p => {\n      let id = parseInt(p[\"id\"])\n      if (id) {\n        this.connect(id)\n      }\n    })\n  }\n\n  connect(id: number) {\n    this._chat.connectToMessages(id)\n    this._chat.subscribeToMessages().subscribe(data => {\n      this._subscribeToWSMessages(data)\n    })\n  }\n\n  getChatTitle() {\n    if (this.user && this.chat) {\n      if (this.chat.title) return this.chat.title\n      else if (this.chat.is_group) return \"Чат 1\"\n      else {\n        let user = this.chat.users.filter(i => i.id !== this.user?.id)[0]\n        return user.first_name + \" \" + user.last_name\n      }\n    }\n    return null\n  }\n\n  sendMessage() {\n    this._chat.sendMessage(this.message)\n  }\n\n  uploadFile(event: Event, type: \"img\" | \"doc\") {\n    let el = event.target as HTMLInputElement\n    let fileList: FileList | null = el.files\n    let fd = new FormData()\n    if (fileList) {\n      let f = fileList[0]\n      if (f.name.length > 100) {\n        console.error(\"Длина названия файла не может быть больше 100 символов.\")\n      } else {\n        let uf = {type, name: f.name, progress: 0}\n        fd.append(\"file\", f)\n        this.uploadigFiles.push(uf)\n        let uploadingFilesLastId = this.uploadigFiles.length - 1\n        this.uploadSubscription = this._chat.uploadFile(fd, type).subscribe(data => {\n          if (data.type === HttpEventType.UploadProgress && data.total) {\n            this.uploadigFiles[uploadingFilesLastId].progress = Math.round(data.loaded / data.total * 100)\n          } else if (data.type === HttpEventType.Response) {\n            if (data.body?.data.id) {\n              type === \"img\" && this.message['imgs'].push(data.body?.data.id)\n              type === \"doc\" && this.message['docs'].push(data.body?.data.id)\n              this.uploadigFiles[uploadingFilesLastId].id = data.body.data.id\n            }\n          }\n        })\n       }\n    }\n  }\n\n  breakUpload() {\n    this.uploadSubscription?.unsubscribe()\n    let uploadingFilesLastId = this.uploadigFiles.length - 1\n    this.uploadigFiles.splice(uploadingFilesLastId, 1)\n  }\n\n  deleteUploadedFile(type: \"img\" | \"doc\", id?: number) {\n    id && this._chat.deleteUploadedFile(id, type).subscribe(data => {\n      if (type === 'img') {\n        this.message['imgs'].splice(this.message.imgs.indexOf(id), 1)\n      } else if (type === 'doc') {\n        this.message['docs'].splice(this.message.docs.indexOf(id), 1)\n      }\n      let uf = this.uploadigFiles.find(i => i.id === id)\n      uf && this.uploadigFiles.splice(this.uploadigFiles.indexOf(uf), 1)\n    })\n  }\n\n  openImageSlider(data: {id: number, urls: string[]}) {\n    this.imagesForImageSlider = data.urls\n    this.imageIdForImageSlider = data.id\n    this.imageSliderIsOpen = true\n  }\n\n  closeImageSlider() {\n    this.imagesForImageSlider = []\n    this.imageIdForImageSlider = 0\n    this.imageSliderIsOpen = false\n  }\n\n  writingMessage() {\n    this._chat.writingMessage(this.user?.id || -1)\n  }\n\n  scroll(el: HTMLElement) {\n    el.scrollTop = el.scrollHeight\n  }\n\n  getWritingUsersString() {\n    let totalString = \"\"\n    let a = this.writingUsers.map(i => {return `${i.first_name} ${i.last_name}`})\n    for (let i = 0;i < a.length;i++) {\n      totalString += a[i]\n      if (i + 1 !== a.length) {\n        totalString += \", \"\n      }\n    }\n    totalString = totalString.length > 60 ? totalString.substring(0, 80) + \"...\" : totalString\n    return totalString.length >= 1 ? totalString + \" печатает...\" : totalString + \" печатают...\"\n  }\n\n  startEditing() {\n    this.isEditing = true\n  }\n\n  stopEditing() {\n    this.isEditing = false\n  }\n\n  editChat() {\n    this.chat && this._chat.editChat(this.chatForEdit, this.chat.id).subscribe(data => {\n      if (data.result) {\n        this.chat = data.data.chat\n        if (this.chat) {\n          let {title, about, users, banned_list, moderators, is_private} = this.chat\n          this.chatForEdit = {photo: undefined, title, about, users: users.map(i => {return i.id}), moderators, banned_list, is_private}\n        }\n      }\n      else console.error(data.message)\n    })\n    this.stopEditing()\n  }\n\n  signoutFromChat() {\n    this.chat && this._chat.signout(this.chat.id).subscribe(data => {\n      if (data.result) {\n        this.chat = data.data.chat\n        this.chatForEdit.banned_list = data.data.chat?.banned_list || this.chatForEdit.banned_list\n      }\n      else console.error(data.message)\n    })\n  }\n\n  banUser(id: number) {\n    this.chat && this._chat.ban(this.chat.id, id).subscribe(data => {\n      if (data.result) {\n        this.chat = data.data.chat\n        this.chatForEdit.banned_list = data.data.chat?.banned_list || this.chatForEdit.banned_list\n        console.log(data.data.chat)\n      }\n      else console.error(data.message)\n    })\n  }\n\n  checkUserIsAdmin(id?: number) {\n    return this.user ? this.chat?.admins.includes(id || this.user.id) : false\n  }\n\n  checkUserIsModer(id?: number) {\n    return this.user ? this.chat?.moderators.includes(id || this.user.id) : false\n  }\n\n  checkUserIsBanned(id?: number) {\n    return this.user ? this.chat?.banned_list.includes(id || this.user.id) : false\n  }\n\n  checkUserCanEditChat() {\n    switch (this.chat?.who_can_edit_chat) {\n      case \"everybody\": return true\n      case \"admins_and_moders\": return this.checkUserIsAdmin() || this.checkUserIsModer\n      case \"admins\": return this.checkUserIsAdmin()\n      default: return false\n    }\n  }\n\n  getOtherUserInChat(id?: number) {\n    let chat\n    if (id) chat = this.chats.find(i => i.id === id)\n    else chat = this.chat\n    return chat?.users.filter(i => i.id !== this.user?.id)[0]\n  }\n\n  setChatNavIsOpen() {\n    this.chatNavIsOpen = !this.chatNavIsOpen\n    if (this.chatNavIsOpen && window.innerWidth < 1043) {\n      this.chatInfoIsOpen = false\n    }\n  }\n\n  setChatInfoIsOpen() {\n    this.chatInfoIsOpen = !this.chatInfoIsOpen\n    if (this.chatInfoIsOpen && window.innerWidth < 1043) {\n      this.chatNavIsOpen = false\n    }\n  }\n\n  chatIsOpen() {\n    return window.innerWidth > 767\n  }\n\n  private _subscribeToWSMessages(data: any) {\n    switch (data.action) {\n      case \"send_message\": {\n        if (data.message) {\n          let chatsCopy = [...this.chats]\n          let messageCopy = {...data.message}\n          let chat = chatsCopy.find(i => i.id === data.message.chat)\n          if (chat) {\n            let chatCopy = {...chat}\n            let id = chatsCopy.indexOf(chat)\n            chatCopy.messages = [...chatCopy.messages, messageCopy]\n            chatsCopy.splice(id, 1, chatCopy)\n          }\n          this._store.dispatch(new SetUserChats(chatsCopy))\n        }\n        break\n      }\n\n      case \"writing_message\": {\n        let id = this.writingUsers.map(i => i.id).indexOf(data.user.id)\n        if (id === -1) {\n          this.writingUsers.push(data.user)\n        }\n        if (this.intervalRef) clearInterval(this.intervalRef)\n        this.intervalRef = setInterval(() => {\n          this.writingUsers.splice(id, 1)\n        }, 2000)\n        console.log(id)\n        break\n      }\n\n      case \"read_messages\": {\n        if (data.id && this.user) {\n          let chatsCopy = [...this.chats]\n          let chat = chatsCopy.find(i => i.id === data.id)\n          if (chat) {\n            let chatCopy = {...chat}\n            let id = chatsCopy.indexOf(chat)\n            chatCopy.messages = chatCopy.messages.map(i => {\n              this.user && i.readers.push(this.user.id)\n              return i\n            })\n            chatsCopy.splice(id, 1, chatCopy)\n          }\n          this._store.dispatch(new SetUserChats(chatsCopy))\n        }\n        break\n      }\n\n      default: console.error(\"Action in data is incorrect\")\n    }\n  }\n\n}\n","<image-slider *ngIf=\"imageSliderIsOpen\" [urls]=\"imagesForImageSlider\" [id]=\"imageIdForImageSlider\" (close)=\"closeImageSlider()\"></image-slider>\n<div class=\"All-Chats Shadow-Right\" [ngClass]=\"{'Close': !chatNavIsOpen}\">\n    <a [routerLink]=\"'/chats'\" [queryParams]=\"{id: c.id}\" *ngFor=\"let c of chats\" class=\"Item\" (click)=\"chatNavIsOpen = false\">\n        <div class=\"Avatar\"><img src=\"/media/icons/profile.png\" alt=\"\" /> </div>\n        <div class=\"Main-Info\">\n            <div class=\"Name\">{{c.title || getOtherUserInChat(c.id)?.first_name + \" \" + getOtherUserInChat(c.id)?.last_name}}</div>\n            <div class=\"Status\">{{c.messages[c.messages.length - 1].body}}</div>\n        </div>\n    </a>\n</div>\n<div *ngIf=\"chat\" class=\"Chat\">\n    <div class=\"Chat__Container\" *ngIf=\"chatIsOpen() || (!chatInfoIsOpen && !chatNavIsOpen)\">\n        <header class=\"Chat__Header\">\n            <hamburger [isOpen]=\"chatNavIsOpen\" (onchange)=\"setChatNavIsOpen()\"></hamburger>\n            <div class=\"Information\">\n                <div class=\"Chat-Ava\"></div>\n                <div class=\"Chat-Main-Info\">\n                    <div class=\"Chat-Title\" *ngIf=\"chat.is_group\" (click)=\"setChatInfoIsOpen()\">{{getChatTitle()}}</div>\n                    <a [routerLink]=\"'/profile'\" [queryParams]=\"{id: getOtherUserInChat()?.id}\" class=\"Chat-Title\" *ngIf=\"!chat.is_group\">{{getChatTitle()}}</a>\n                    <div class=\"Chat-Status\">{{writingUsers.length === 0 ? \"online\" : getWritingUsersString()}}</div>\n                </div>\n            </div>\n        </header>\n        <main class=\"Chat__Body\" #chatBody>\n            <chat-message *ngFor=\"let m of chat.messages\" [message]=\"m\" [userId]=\"user?.id || -1\" style=\"padding: 0 10px;\" (openSlider)=\"openImageSlider($event)\" #chatMessages></chat-message>\n        </main>\n        <form class=\"Chat__Form\" #chatForm=\"ngForm\" (ngSubmit)=\"sendMessage()\">\n            <div class=\"Chat__Form__Fields-Container\">\n                <input (ngModelChange)=\"writingMessage()\" name=\"body\" [(ngModel)]=\"message.body\" placeholder=\"Введите сообщение\" />\n                <ng-container>\n                    <input type=\"file\" #imageUpload accept=\"image/*\" (change)=\"uploadFile($event, 'img')\" style=\"display: none;\" />\n                    <input type=\"file\" #fileUpload accept=\"application/msword, text/plain, application/pdf\" (change)=\"uploadFile($event, 'doc')\" style=\"display: none;\" />\n                </ng-container>\n                <div class=\"Actions\">\n                    <button type=\"button\" (click)=\"imageUpload.click()\" class=\"Upload-Img\"><i></i></button>\n                    <button type=\"button\" (click)=\"fileUpload.click()\" class=\"Upload-Doc\"><i></i></button>\n                </div>\n                <button class=\"Send\"><i></i></button>\n            </div>\n            <div class=\"Chat__Form__Upload-Files\">\n                <div class=\"Item\" *ngFor=\"let i of uploadigFiles\">\n                    <div class=\"Icon\">\n                        <i [class]=\"i.type === 'img' ? 'Upload-Img' : 'Upload-Doc'\"></i>\n                    </div>\n                    <div class=\"Name\">{{i.name}}</div>\n                    <progress-bar [progress]=\"i.progress\" [progressColor]=\"i.progressColor\"></progress-bar>\n                    <div class=\"Progress-Bar-Procents\">{{i.progress.toString() + \"%\"}}</div>\n                    <div class=\"Actions\">\n                        <button type=\"button\" *ngIf=\"i.progress < 100\" [class]=\"'Break-Upload'\" (click)=\"breakUpload()\"><i></i></button>\n                        <button type=\"button\" *ngIf=\"i.progress === 100\" [class]=\"'Delete-File'\" (click)=\"deleteUploadedFile(i.type, i.id)\"><i></i></button>\n                    </div>\n                </div>\n                <div class=\"Item\" *ngFor=\"let d of message.docs\"></div>\n            </div>\n        </form>\n    </div>\n    <form class=\"Chat__Information Shadow-Left\" *ngIf=\"chat.is_group && chatInfoIsOpen\" #chatEditForm=\"ngForm\" (ngSubmit)=\"editChat()\">\n        <hamburger [isOpen]=\"true\" (onchange)=\"setChatInfoIsOpen()\"></hamburger>\n        <div *ngIf=\"!isEditing\" class=\"Main-Info\">\n            <div class=\"Chat-Ava\"></div>\n            <div class=\"Chat-Title\">{{getChatTitle()}}</div>\n            <div class=\"Chat-Description\">{{chat.about || \"Описание не написано\"}}</div>\n        </div>\n        <div *ngIf=\"isEditing\" class=\"Main-Info\">\n            <div class=\"Chat-Ava\"></div>\n            <input name=\"title\" class=\"Chat-Title\" [(ngModel)]=\"chatForEdit.title\" />\n            <textarea name=\"about\" class=\"Chat-Description\" [(ngModel)]=\"chatForEdit.about\"></textarea>\n        </div>\n        <div *ngIf=\"!isEditing\" class=\"Actions Column\">\n            <div class=\"Edit\" *ngIf=\"checkUserCanEditChat()\" (click)=\"startEditing()\">Изменить</div>\n            <div class=\"Bad-Chat\" *ngIf=\"!checkUserIsAdmin()\">Пожаловаться</div>\n            <div class=\"Signout\" *ngIf=\"!checkUserIsAdmin()\" (click)=\"signoutFromChat()\">Выйти из чата</div>\n        </div>\n        <div *ngIf=\"isEditing\" class=\"Actions Row\">\n            <button class=\"Done\" type=\"submit\">Готово</button>\n            <span class=\"Split\"></span>\n            <button class=\"Cancel\" type=\"button\" (click)=\"stopEditing()\">Отменить</button>\n        </div>\n        <div *ngIf=\"!isEditing\" class=\"Users\">\n            <a [routerLink]=\"'/profile'\" [queryParams]=\"{id: u.id}\" class=\"Item\" *ngFor=\"let u of chat.users\">\n                <div class=\"Avatar\"><img src=\"/media/icons/profile.png\" alt=\"\" /> </div>\n                <div class=\"Main-Info\">\n                    <div class=\"Name\">{{u.id === user?.id ? \"Вы\" : u.first_name + \" \" + u.last_name}}</div>\n                    <div class=\"Status\">{{u.profile.status || \"online\"}}</div>\n                </div>\n                <span class=\"Chat-Status\" *ngIf=\"checkUserIsAdmin(u.id)\">admin</span>\n                <span class=\"Chat-Status\" *ngIf=\"checkUserIsModer(u.id)\">moder</span>\n            </a>\n        </div>\n        <div *ngIf=\"isEditing\" class=\"Users\">\n            <div class=\"Item\" *ngFor=\"let u of chat.users\">\n                <div class=\"Avatar\"><img src=\"/media/icons/profile.png\" alt=\"\" /> </div>\n                <div class=\"Main-Info\">\n                    <div class=\"Name\">{{u.first_name + \" \" + u.last_name}}</div>\n                </div>\n                <ng-container *ngIf=\"u.id !== user?.id\">\n                    <select [value]=\"checkUserIsModer() ? 'moder' : 'user'\">\n                        <option value=\"user\">Пользователь</option>\n                        <option value=\"moder\">Модератор</option>\n                    </select>\n                    <button (click)=\"banUser(u.id)\" type=\"button\" class=\"Ban\" [ngClass]=\"{'Is-Banned': checkUserIsBanned(u.id), 'Not-Banned': !checkUserIsBanned(u.id)}\"><i></i></button>\n                </ng-container>\n            </div>\n        </div>\n    </form>\n</div>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { interval } from 'rxjs';\nimport { AppState } from '../business';\nimport { IBaseOffer } from '../models/offers.model';\nimport { OffersService } from '../services/offers.service';\nimport { UiService } from '../services/ui.service';\n\n@Component({\n  selector: 'create-offer',\n  templateUrl: './create-offer.component.html',\n  styleUrls: ['./create-offer.component.sass']\n})\nexport class CreateOfferComponent implements OnInit {\n  @Output()\n  onclose = new EventEmitter()\n\n  warning?: string\n  isLoading: boolean = false\n\n  windowClass: \"Close\" | \"\" = \"\"\n  @Input()\n  windowTitle: string = \"Создать предложение\"\n\n  @Input()\n  offer: IBaseOffer = {\n    define_type_of_request: 'offers',\n    title: \"\",\n    about: \"\",\n    back: \"\",\n    user: -1,\n    is_published: true\n  }\n\n  constructor(\n    private _store: Store<AppState>,\n    private _offers: OffersService,\n    private _ui: UiService\n  ) {\n    _store.subscribe(data => {\n      this.offer.user = data.account.user?.id || -1\n    })\n  }\n\n  ngOnInit() {\n  }\n\n  createOffer() {\n    this.isLoading = true\n    this._offers.createOffer(this.offer).subscribe(data => {\n      if (data.result) {\n        this._ui.openWarning({message: \"Предложение создано.\", class: \"ok\"})\n        this.close()\n      }\n      else this._ui.openWarning({message: \"Что-то пошло не так. Проверте данные и повторите попытку.\", class: \"error\"})\n      this.isLoading = false\n    })\n  }\n\n  close() {\n    this.windowClass = \"Close\"\n    interval(250).subscribe(() => {this.onclose.emit()})\n  }\n\n}\n","<form class=\"Form-Container Login-Form Dialog\" [class]=\"windowClass\" #createOfferForm=\"ngForm\" (ngSubmit)=\"createOffer()\">\n    <div class=\"Header\">\n        <div class=\"Title\">{{windowTitle}}</div>\n        <button class=\"Close\" type=\"button\" (click)=\"close()\">&times;</button>\n    </div>\n    <div class=\"Form-Container__Warning\" *ngIf=\"warning\">{{warning}}</div>\n    <div class=\"Form-Container__Fields-Container\">\n        <div class=\"Field\">\n            <select [name]=\"'define_type_of_request'\" required [(ngModel)]=\"offer.define_type_of_request\" #define_type_of_request=\"ngModel\">\n                <option value=\"offers\">Предложение помощи</option>\n                <option value=\"requsts\">Запрос помощи</option>\n                <option value=\"quastions\">Вопрос насчет помощи</option>\n            </select>\n        </div>\n        <div class=\"Field\">\n            <input [name]=\"'title'\" required [placeholder]=\"'Заголовок'\" [(ngModel)]=\"offer.title\" #title=\"ngModel\" max_length=\"64\" />\n            <span *ngIf=\"title.errors?.required && title.touched\">\n                Обязательное поле.\n            </span>\n            <span *ngIf=\"title.errors?.max_length && title.touched\">\n                Максимальная длина - 64 символа.\n            </span>\n        </div>\n        <div class=\"Field\">\n            <textarea [name]=\"'about'\" required [placeholder]=\"'О предложении'\" [(ngModel)]=\"offer.about\" #about=\"ngModel\" max_length=\"1024\"></textarea>\n            <span *ngIf=\"about.errors?.required && about.touched\">\n                Обязательное поле.\n            </span>\n            <span *ngIf=\"about.errors?.max_length && about.touched\">\n                Максимальная длина - 1024 символа.\n            </span>\n        </div>\n        <div class=\"Field\">\n            <textarea [name]=\"'back'\" required [placeholder]=\"'Что вы хотите взамен'\" [(ngModel)]=\"offer.back\" #back=\"ngModel\" max_length=\"1024\"></textarea>\n            <span *ngIf=\"back.errors?.required && back.touched\">\n                Обязательное поле.\n            </span>\n            <span *ngIf=\"back.errors?.max_length && back.touched\">\n                Максимальная длина - 1024 символа.\n            </span>\n        </div>\n        <div class=\"Field Checkbox\">\n            <input id=\"back\" type=\"checkbox\" [name]=\"'back'\" [(ngModel)]=\"offer.is_published\" #back=\"ngModel\" max_length=\"1024\" />\n            <label for=\"back\">Публичный или нет?</label>\n        </div>\n    </div>\n    <button class=\"Form-Container__Button\" [disabled]=\"createOfferForm.invalid\">{{isLoading ? \"Загрузка...\" : \"Создать\"}}</button>\n</form>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'form-switcher',\n  templateUrl: './form-switcher.component.html',\n  styleUrls: ['./form-switcher.component.sass']\n})\nexport class FormSwitcherComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"Form-Switcher\">\n    <div class=\"Item\">\n\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { ActivatedRoute, ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../business';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private _store: Store<AppState>,\n    private _router: Router\n  ) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ) {\n    console.log()\n    let user = this._store.subscribe(data => {\n      return data.account.user\n    })\n    if (!!this._store.subscribe(data => {\n      return data.account.user\n    })) {\n      return true\n    } else {\n      this._router.navigateByUrl(\"/login\")\n      return false\n    }\n  }\n  \n}\n","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'hamburger',\n  templateUrl: './hamburger.component.html',\n  styleUrls: ['./hamburger.component.sass']\n})\nexport class HamburgerComponent implements OnInit {\n  @Input()\n  isOpen: boolean = false\n\n  @Output()\n  onchange = new EventEmitter()\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  change() {\n    this.onchange.emit()\n  }\n}\n","<div class=\"Hamburger\" (click)=\"change()\" [ngClass]=\"{'Open': isOpen}\">\n    <span class=\"Item-1\"></span>\n    <span class=\"Item-2\"></span>\n    <span class=\"Item-3\"></span>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../business';\nimport { User } from '../models/user.model';\n\n@Component({\n  selector: 'headerbar',\n  templateUrl: './head.component.html',\n  styleUrls: ['./head.component.sass']\n})\nexport class HeadComponent implements OnInit {\n  user?: User\n  submenuIsOpen: boolean = false\n\n  constructor(\n    private _store: Store<AppState>\n  ) {\n    this._store.subscribe(data => {\n      this.user = data.account.user\n    })\n  }\n\n  ngOnInit(): void {\n  }\n\n  openS() {\n    this.submenuIsOpen = true\n  }\n\n  closeS() {\n    this.submenuIsOpen = false\n  }\n\n}\n","<div class=\"Header__Title\">\n    <div class=\"Header__Title__Text\">IBLS</div>\n    <span></span>\n    <div class=\"Header__Title__Text\" style=\"font-size: 26px;font-weight: 500;\"> Дети детям</div>\n</div>\n<div class=\"Header__Auth-Container\" (mouseenter)=\"openS()\" (mouseleave)=\"closeS()\">\n    <div class=\"Header__Auth-Container__User-Info\">\n        <div class=\"Header__Auth-Container__User-Info__Ava\"><img [src]=\"'/media/icons/profile.png'\" alt=\"\" /></div>\n        <div class=\"Header__Auth-Container__User-Info__Username\">{{user?.username}}</div>\n    </div>\n    <div class=\"Header__Auth-Container__Submenu\" *ngIf=\"submenuIsOpen\">\n        <a routerLink=\"/profile\" class=\"Header__Auth-Container__Submenu__Item LK\">Личный кабинет</a>\n        <a routerLink=\"/logout\" class=\"Header__Auth-Container__Submenu__Item LogOut\">Выйти</a>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\n\n@Component({\n  selector: 'home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.sass']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private _router: Router) {\n    _router.events.subscribe(e => {\n      if(e instanceof NavigationEnd) {\n        let elID = e.url.split(\"#\")[1]\n        let el = document.getElementById(elID)\n        if(el) {\n          el.scrollIntoView({\n            behavior: 'smooth',\n            block: 'start'\n          })\n        }\n      }\n    })\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"About\" [id]=\"'About'\">\n    <div class=\"Title\">О приложении</div>\n    <div class=\"About__Content\">\n        <div class=\"Content__Text\">\n            Текст...\n        </div>\n        <div class=\"Content__Images\">Картинки</div>\n    </div>\n</div>\n<div class=\"Pluses\" [id]=\"'Pluses'\">\n    <div class=\"Title\">Плюсы</div>\n    <div class=\"Pluses__Content\">\n        <ul class=\"Pluses__Content__List\">\n            <li class=\"Item\">Текст 1</li>\n            <li class=\"Item\">Текст 2</li>\n            <li class=\"Item\">Текст 3</li>\n            <li class=\"Item\">Текст 4</li>\n        </ul>\n    </div>\n</div>\n<div class=\"Instruction\" [id]=\"'Instruction'\">\n    <div class=\"Title\">\n        Инструкция\n    </div>\n    <div class=\"Instruction__Content\">\n        Текст...\n    </div>\n</div>","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'image-slider',\n  templateUrl: './image-slider.component.html',\n  styleUrls: ['./image-slider.component.sass']\n})\nexport class ImageSliderComponent implements OnInit {\n  @Input()\n  urls: string[] = []\n  \n  @Input()\n  id: number = 0\n\n  @Output()\n  close = new EventEmitter()\n\n  constructor() { }\n\n  ngOnInit(): void {\n    window.addEventListener(\"keydown\", e => {\n      if (e.key === \"Escape\") this.closeSlider()\n      if (e.key === \"ArrowRight\") this.next()\n      if (e.key === \"ArrowLeft\") this.previous()\n    })\n  }\n\n  next() {\n    this.urls.length - 1 > this.id ? this.id +=1 : this.id = 0\n  }\n\n  previous() {\n    0 < this.id ? this.id -=1 : this.id = this.urls.length - 1\n  }\n\n  closeSlider() {\n    this.close.emit()\n  }\n}\n","<div class=\"Blackout-Container\"></div>\n<div class=\"Image-Slider\" [style.backgroundImage]=\"'url(' + urls[id] + ')'\">\n    <div class=\"Arrow-Left\" (click)=\"previous()\"></div>\n    <div class=\"Column\">\n        <div class=\"Close\" (click)=\"closeSlider()\"></div>\n        <div class=\"Arrow-Right\" (click)=\"next()\"></div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, NgForm, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { interval } from 'rxjs';\nimport { AppState } from '../business';\nimport { AccountService, ILoginData } from '../services/account.service';\n\n@Component({\n  selector: 'login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.sass']\n})\nexport class LoginComponent implements OnInit {\n  loginFormGroup: ILoginData = {\n    username: \"\",\n    password: \"\"\n  }\n  warning?: string\n  isLoading: boolean = false\n\n  constructor(private _account: AccountService, private _router: Router, private _store: Store<AppState>) { }\n\n  ngOnInit(): void {\n  }\n\n  login(form: NgForm) {\n    this.isLoading = true\n    this._account.login(form.value).subscribe(data => {\n      this.isLoading = false\n      if (data.data.user) {\n        this._router.navigateByUrl(\"home\")\n      } else {\n        this.warning = data.message\n        interval(10000).subscribe(() => {\n          this.warning = undefined\n        })\n      }\n    })\n  }\n\n}\n","<img src=\"/media/logo.png\" alt=\"\" />\n<form class=\"Form-Container Login-Form\" #loginForm=\"ngForm\" (ngSubmit)=\"login(loginForm)\">\n    <account-nav style=\"width: 100%;\"></account-nav>\n    <div class=\"Form-Container__Title\">Авторизация</div>\n    <div class=\"Form-Container__Warning\" *ngIf=\"warning\">{{warning}}</div>\n    <div class=\"Form-Container__Fields-Container\">\n        <div class=\"Field\">\n            <input [name]=\"'username'\" required [placeholder]=\"'Ник'\" [(ngModel)]=\"loginFormGroup.username\" #username=\"ngModel\" />\n            <span *ngIf=\"username.invalid && username.touched\">\n                Не указан ник.\n            </span>\n        </div>\n        <div class=\"Field\">\n            <input [name]=\"'password'\" required [placeholder]=\"'Пароль'\" [type]=\"'password'\" [(ngModel)]=\"loginFormGroup.password\" #password=\"ngModel\" />\n            <span *ngIf=\"password.invalid && password.touched\">\n                Не указан пароль.\n            </span>\n        </div>\n    </div>\n    <div class=\"Form-Container__Links\">\n        <span>Забыли пароль? <a routerLink=\"/reset-password\">Сбросить</a></span>\n    </div>\n    <button class=\"Form-Container__Button\" [disabled]=\"loginForm.invalid\">{{isLoading ? \"Загрузка...\" : \"Войти\"}}</button>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../business';\nimport { SetUser } from '../business/actions/account.actions';\nimport { AccountService } from '../services/account.service';\n\n@Component({\n  selector: 'logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.sass']\n})\nexport class LogoutComponent implements OnInit {\n\n  constructor(private _accountService: AccountService, private _store: Store<AppState>, private _router: Router) {  }\n\n  ngOnInit(): void {\n    this._accountService.logout().subscribe((data) => {\n      this._store.dispatch(new SetUser(undefined))\n      this._router.navigateByUrl(\"login\")\n    })\n  }\n\n}\n","<p>Logout successful!</p>","export interface IUser {\r\n  readonly id: number\r\n  readonly username: string\r\n  readonly email: string\r\n  readonly first_name: string\r\n  readonly last_name: string\r\n  readonly profile: IProfile\r\n}\r\n\r\nexport interface IProfile {\r\n  readonly id: number\r\n  readonly user: number\r\n  readonly phone: string\r\n  readonly patronymic: string\r\n  readonly age: number\r\n  readonly status?: string\r\n  readonly user_in_school_status: \"student\" | \"teacher\" | \"parent\" | \"admin\" | \"moderator\"\r\n  readonly country?: string\r\n  readonly city?: string\r\n  readonly district?: string\r\n  readonly about_me?: string\r\n}\r\n\r\nexport class User {\r\n  constructor(\r\n    private _id: number,\r\n    private _username: string,\r\n    private _email: string,\r\n    private _first_name: string,\r\n    private _last_name: string,\r\n    private _profile: Profile\r\n  ) { }\r\n\r\n  get id() {\r\n    return this._id\r\n  }\r\n  \r\n  get username() {\r\n    return this._username\r\n  }\r\n\r\n  set username(username: string) {\r\n    this._username = username\r\n  }\r\n\r\n  get email() {\r\n    return this._email\r\n  }\r\n\r\n  set email(email: string) {\r\n    this._email = email\r\n  }\r\n\r\n  get firstName() {\r\n    return this._first_name\r\n  }\r\n\r\n  set firstName(firstName: string) {\r\n    this._first_name = firstName\r\n  }\r\n\r\n  get lastName() {\r\n    return this._last_name\r\n  }\r\n\r\n  set lastName(lastName: string) {\r\n    this._last_name = lastName\r\n  }\r\n\r\n  get fullName() {\r\n    return this._first_name + \" \" + this._last_name\r\n  }\r\n\r\n  get profile() {\r\n    return this._profile\r\n  }\r\n\r\n  set profile(profile: Profile) {\r\n    this._profile = profile\r\n  }\r\n\r\n  toJSON(): IUser {\r\n    let {id, username, email, firstName, lastName, profile} = this\r\n    let {userId, patronymic, phone, age, status, user_in_school_status, city, country, about_me, district} = profile\r\n    let JSONUser = {\r\n      id, \r\n      username, \r\n      email, \r\n      first_name: firstName, \r\n      last_name: lastName, \r\n      profile: {\r\n        id: profile.id,\r\n        user: userId,\r\n        patronymic,\r\n        phone,\r\n        age,\r\n        status,\r\n        user_in_school_status,\r\n        city,\r\n        country,\r\n        about_me,\r\n        district\r\n      }\r\n    }\r\n    return JSONUser\r\n  }\r\n  copy() {\r\n    return {...this}\r\n  }\r\n}\r\n\r\nexport class Profile {\r\n  constructor(\r\n    private _id: number,\r\n    private _user: number,\r\n    private _phone: string,\r\n    private _patronymic: string,\r\n    private _age: number,\r\n    private _user_in_school_status: \"student\" | \"teacher\" | \"parent\" | \"admin\" | \"moderator\",\r\n    private _status?: string,\r\n    private _country?: string,\r\n    private _city?: string,\r\n    private _about_me?: string,\r\n    private _district?: string\r\n  ) { }\r\n  get id() {\r\n    return this._id\r\n  }\r\n\r\n  get userId() {\r\n    return this._user\r\n  }\r\n\r\n  get phone() {\r\n    return this._phone\r\n  }\r\n\r\n  set phone(phone: string) {\r\n    this._phone = phone\r\n  }\r\n\r\n  get patronymic() {\r\n    return this._patronymic\r\n  }\r\n\r\n  set patronymic(patronymic: string) {\r\n    this._patronymic = patronymic\r\n  }\r\n\r\n  get age() {\r\n    return this._age\r\n  }\r\n\r\n  set age(age: number) {\r\n    this._age = age\r\n  }\r\n\r\n  get status() {\r\n    return this._status\r\n  }\r\n\r\n  set status(status: string | undefined) {\r\n    this._status = status\r\n  }\r\n\r\n  get user_in_school_status() {\r\n    return this._user_in_school_status\r\n  }\r\n  \r\n  set user_in_school_status(user_in_school_status: \"student\" | \"teacher\" | \"parent\" | \"admin\" | \"moderator\") {\r\n    this._user_in_school_status = user_in_school_status\r\n  }\r\n\r\n  get country() {\r\n    return this._country\r\n  }\r\n  \r\n  set country(country: string | undefined) {\r\n    this._country = country\r\n  }\r\n\r\n  get city() {\r\n    return this._city\r\n  }\r\n  \r\n  set city(city: string | undefined) {\r\n    this._city = city\r\n  }\r\n\r\n  get district() {\r\n    return this._district\r\n  }\r\n\r\n  set district(district: string | undefined) {\r\n    this._district = district\r\n  }\r\n\r\n  get about_me() {\r\n    return this._about_me\r\n  }\r\n  \r\n  set about_me(about_me: string | undefined) {\r\n    this._about_me = about_me\r\n  }\r\n}","import { Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\n\ntype CanOpenLinks =\n  | \"home\"\n  | \"news\"\n  | \"ads\"\n  | \"chats\"\n\n@Component({\n  selector: 'navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.sass']\n})\nexport class NavbarComponent implements OnInit {\n  @Input()\n  Content?: HTMLDivElement\n\n  openLinks: CanOpenLinks[] | any = JSON.parse(localStorage.getItem(\"openLinks\") || \"[]\")\n  location = window.location\n  hash: string = \"\"\n\n  windowWidth: number = window.innerWidth\n\n  isOpen: boolean = false\n\n  constructor(private _router: Router) {\n    _router.events.subscribe(e => {\n      if(e instanceof NavigationEnd) {\n        this.location = window.location\n        this.hash = window.location.hash\n      }\n    })\n  }\n\n  ngOnInit(): void {\n    if (this.Content) {\n      if(this.windowWidth < 1450) this.Content.style.marginLeft = \"0\"\n    }\n    window.onresize = e => {\n      this.windowWidth = window.innerWidth\n      if (this.Content){\n        if(this.windowWidth < 1450) this.Content.style.marginLeft = \"0\"\n        else this.Content.style.marginLeft = \"320px\"\n      }\n    }\n  }\n\n  openLink(n: CanOpenLinks) {\n    let ol = JSON.parse(localStorage.getItem(\"openLinks\") || \"[]\")\n    ol ? localStorage.setItem(\"openLinks\", JSON.stringify([...ol, n])) : localStorage.setItem(\"openLinks\", JSON.stringify([n]))\n    this.openLinks = JSON.parse(localStorage.getItem(\"openLinks\") || \"[]\")\n  }\n\n  closeLink(n: CanOpenLinks) {\n    let ol = JSON.parse(localStorage.getItem(\"openLinks\") || \"[]\")\n    if (ol) {\n      let olCopy = [...ol]\n      olCopy.splice(olCopy.indexOf(n), 1)\n      localStorage.setItem(\"openLinks\", JSON.stringify(olCopy))\n    } else {\n      throw new Error(\"Open links is undefined\")\n    }\n    this.openLinks = JSON.parse(localStorage.getItem(\"openLinks\") || \"[]\")\n  }\n\n  checkLinkIsOpen(n: CanOpenLinks) {\n    return this.openLinks.indexOf(n) !== -1\n  }\n\n  navbarIsOpen(): boolean {\n    if (this.windowWidth > 1450) return true\n    else return this.isOpen\n  }\n\n  setIsOpen() {\n    this.isOpen = !this.isOpen\n  }\n}\n","<div class=\"Blackout\" *ngIf=\"navbarIsOpen() && windowWidth <= 1450\" (click)=\"setIsOpen()\"></div>\n<ul #navbar class=\"Navbar\" [ngClass]=\"{'Close': navbarIsOpen()}\" [ngClass]=\"{'Close': !navbarIsOpen()}\">\n    <li class=\"Navbar__Item\">\n        <div class=\"Main-Link Home-Main-Link\">\n            <a (click)=\"setIsOpen()\" routerLink=\"/home\" [fragment]=\"'About'\" routerLinkActive=\"active\" class=\"Main-Link__Text\">Главная</a>\n            <i class=\"Main-Link__OpenClose-Arrow\" (click)=\"location.pathname.split('/')[1] === 'home' ? undefined : checkLinkIsOpen('home') ? closeLink('home') : openLink('home')\" [ngClass]=\"{'Rotated': checkLinkIsOpen('home') || location.pathname.split('/')[1] === 'home'}\">\n            </i>\n        </div>\n        <ul class=\"Links-Container\" *ngIf=\"checkLinkIsOpen('home') || location.pathname.split('/')[1] === 'home'\">\n            <li (click)=\"hash = '#About'\" class=\"Item\" [ngClass]=\"{'active': hash === '#About'}\">\n                <a [routerLink]=\"'/home'\" [fragment]=\"'About'\" [ngClass]=\"{'active': hash === '#About'}\">\n                    О приложении\n                </a>\n            </li>\n            <li (click)=\"hash = '#Pluses'\" class=\"Item\" [ngClass]=\"{'active': hash === '#Pluses'}\">\n                <a [routerLink]=\"'/home'\" [fragment]=\"'Pluses'\" [ngClass]=\"{'active': hash === '#Pluses'}\">\n                    Плюсы\n                </a>\n            </li>\n            <li (click)=\"hash = '#Instruction'\" class=\"Item\" [ngClass]=\"{'active': hash === '#Instruction'}\">\n                <a [routerLink]=\"'/home'\" [fragment]=\"'Instruction'\" [ngClass]=\"{'active': hash === '#Instruction'}\">\n                    Инструкция\n                </a>\n            </li>\n        </ul>\n    </li>\n    <li class=\"Navbar__Item\">\n        <div class=\"Main-Link News-Main-Link\">\n            <a class=\"Main-Link__Text\" routerLinkActive=\"active\">Новости</a>\n            <i class=\"Main-Link__OpenClose-Arrow\" (click)=\"location.pathname.split('/')[1] === 'news' ? undefined : checkLinkIsOpen('news') ? closeLink('news') : openLink('news')\" [ngClass]=\"{'Rotated': checkLinkIsOpen('news') || location.pathname.split('/')[1] === 'news'}\"></i>\n        </div>\n        <ul class=\"Links-Container\" *ngIf=\"checkLinkIsOpen('home') || location.pathname.split('/')[1] === 'home'\"></ul>\n    </li>\n    <li class=\"Navbar__Item\">\n        <div class=\"Main-Link Ads-Main-Link\">\n            <a class=\"Main-Link__Text\" routerLinkActive=\"active\" (click)=\"setIsOpen()\" routerLink=\"/offers\">Предложения</a>\n            <i class=\"Main-Link__OpenClose-Arrow\" (click)=\"location.pathname.split('/')[1] === 'ads' ? undefined : checkLinkIsOpen('ads') ? closeLink('ads') : openLink('ads')\" [ngClass]=\"{'Rotated': checkLinkIsOpen('ads') || location.pathname.split('/')[1] === 'ads'}\">\n            </i>\n        </div>\n        <ul class=\"Links-Container\" *ngIf=\"checkLinkIsOpen('home') || location.pathname.split('/')[1] === 'home'\"></ul>\n    </li>\n    <li class=\"Navbar__Item\">\n        <div class=\"Main-Link Users-Main-Link\">\n            <a class=\"Main-Link__Text\" routerLinkActive=\"active\" (click)=\"setIsOpen()\" routerLink=\"/users\">Пользователи</a>\n            <i class=\"Main-Link__OpenClose-Arrow\" (click)=\"location.pathname.split('/')[1] === 'chats' ? undefined : checkLinkIsOpen('chats') ? closeLink('chats') : openLink('chats')\" [ngClass]=\"{'Rotated': checkLinkIsOpen('chats') || location.pathname.split('/')[1] === 'chats'}\">\n            </i>\n        </div>\n        <ul class=\"Links-Container\" *ngIf=\"checkLinkIsOpen('home') || location.pathname.split('/')[1] === 'home'\"></ul>\n    </li>\n    <li class=\"Navbar__Item\">\n        <div class=\"Main-Link Chats-Main-Link\">\n            <a class=\"Main-Link__Text\" routerLinkActive=\"active\" (click)=\"setIsOpen()\" routerLink=\"/chats\">Чаты</a>\n            <i class=\"Main-Link__OpenClose-Arrow\" (click)=\"location.pathname.split('/')[1] === 'chats' ? undefined : checkLinkIsOpen('chats') ? closeLink('chats') : openLink('chats')\" [ngClass]=\"{'Rotated': checkLinkIsOpen('chats') || location.pathname.split('/')[1] === 'chats'}\">\n            </i>\n        </div>\n        <ul class=\"Links-Container\" *ngIf=\"checkLinkIsOpen('home') || location.pathname.split('/')[1] === 'home'\"></ul>\n    </li>\n</ul>\n<span class=\"Hanburger-Container\" *ngIf=\"windowWidth <= 1450\">\n    <hamburger [isOpen]=\"navbarIsOpen()\" (onchange)=\"setIsOpen()\"></hamburger>\n</span>","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\nimport { IBaseOffer } from '../models/offers.model';\n\n@Component({\n  selector: 'offer-detail',\n  templateUrl: './offer-detail.component.html',\n  styleUrls: ['./offer-detail.component.sass']\n})\nexport class OfferDetailComponent implements OnInit {\n  @Input()\n  offer?: IBaseOffer\n\n  @Output()\n  onclose = new EventEmitter()\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  close() {\n    this.onclose.emit()\n  }\n}\n","<div class=\"Offer-Detail Dialog\" *ngIf=\"offer\">\n    <div class=\"Header\">\n        <div class=\"Title\">{{offer.title}}</div>\n        <button class=\"Close\" type=\"button\" (click)=\"close()\">&times;</button>\n    </div>\n    <div class=\"Offer__User\">{{offer.user}}</div>\n    <pre class=\"Offer__About\">{{offer.about}}</pre>\n    <pre class=\"Offer__Back\">{{offer.back}}</pre>\n</div>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { IBaseOffer } from '../models/offers.model';\n\n@Component({\n  selector: 'offer',\n  templateUrl: './offer.component.html',\n  styleUrls: ['./offer.component.sass']\n})\nexport class OfferComponent implements OnInit {\n  @Input()\n  offer?: IBaseOffer\n\n  @Output()\n  openDetail = new EventEmitter<IBaseOffer>()\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  splitText(text: string) {\n    return text.length > 100 ? text.substr(0, 100) + \"...\" : text\n  }\n\n  open() {\n    this.openDetail.emit(this.offer)\n  }\n}\n","<ng-container *ngIf=\"offer\">\n    <div class=\"Offer__Title\">{{offer.title}}</div>\n    <div class=\"Offer__User\">{{offer.user}}</div>\n    <div class=\"Offer__About\">{{splitText(offer.about)}}</div>\n    <div class=\"Offer__Back\">{{splitText(offer.back)}}</div>\n    <div class=\"Offer__Actions\">\n        <button class=\"Item-1\" (click)=\"open()\">Подробнее...</button>\n    </div>\n</ng-container>","import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { IBaseOffer, IOffer } from '../models/offers.model';\nimport { OffersService } from '../services/offers.service';\n\nexport type TQuery = string | {}\n\n@Component({\n  selector: 'offers',\n  templateUrl: './offers.component.html',\n  styleUrls: ['./offers.component.sass']\n})\nexport class OffersComponent implements OnInit {\n  detailsIsOpen: boolean = false\n  q: string = \"\"\n  qDetails: TQuery = {}\n\n  offers: IOffer[] = []\n\n  createOfferIsOpen: boolean = false\n  detailOfferIsOpen: boolean = false\n\n  offer?: IBaseOffer\n\n  constructor(private _offers: OffersService, private _store: Store) { }\n\n  ngOnInit(): void {\n    this.requestToGetAllOffers()\n  }\n\n  requestToGetAllOffers() {\n    this._offers.getAllOffers().subscribe(data => {\n      if (data.result && data.data.offers) {\n        this.offers = data.data.offers\n      } else {\n        console.error(data.message)\n      }\n    })\n  }\n\n  getAllOffers() {\n    return this.offers?.filter(i => i.define_type_of_request == \"offers\")\n  }\n\n  getAllRequests() {\n    return this.offers?.filter(i => i.define_type_of_request == \"requsts\")\n  }\n\n  getAllQuestions() {\n    return this.offers?.filter(i => i.define_type_of_request == \"quastions\")\n  }\n\n  search(q: string | object) {\n\n  }\n\n  createOfferClose() {\n    this.createOfferIsOpen = false\n    this.requestToGetAllOffers()\n  }\n\n  detailOfferClose() {\n    this.detailOfferIsOpen = false\n    this.offer = undefined\n  }\n\n  openDetail(offer: IBaseOffer) {\n    this.offer = offer\n    this.detailOfferIsOpen = true\n  }\n}\n","<div class=\"Blackout-Container\" *ngIf=\"createOfferIsOpen || detailOfferIsOpen\"></div>\n<create-offer *ngIf=\"createOfferIsOpen\" (onclose)=\"createOfferClose()\"></create-offer>\n<offer-detail *ngIf=\"detailOfferIsOpen\" [offer]=\"offer\" (onclose)=\"detailOfferClose()\"></offer-detail>\n<div class=\"Offers__Filter-Add-New-Offer\">\n    <form class=\"Search-Container Offers__Filter\" #searchForm=\"ngForm\">\n        <i class=\"Search\"></i>\n        <input class=\"Query\" name=\"q\" [(ngModel)]=\"q\" (ngModelChange)=\"search(q)\" placeholder=\"Поиск...\" />\n        <div class=\"Settings\" #settingsIcon>\n            <button type=\"button\" class=\"Settings-Icon-Btn\" (click)=\"detailsIsOpen = !detailsIsOpen\"><i></i></button>\n            <div *ngIf=\"detailsIsOpen\" class=\"Details\" #details [style.top]=\"settingsIcon.getClientRects()[0]['y'] + 30 + 'px'\" [style.left]=\"settingsIcon.getClientRects()[0]['x'] - details.getClientRects()[0]['width'] + 30 + 'px'\">\n                <div class=\"Title\">Расширеный поиск</div>\n                <form class=\"Items-Container\" #detailsSearchForm=\"ngForm\" (ngSubmit)=\"search(qDetails)\">\n                    <div class=\"Item\">\n                        <input name=\"username\" placeholder=\"Ник\" />\n                    </div>\n                    <button class=\"Button\">Поиск</button>\n                </form>\n            </div>\n        </div>\n    </form>\n    <button class=\"Add-New-Offer\" (click)=\"createOfferIsOpen = !createOfferIsOpen\">\n        <i></i>\n    </button>\n</div>\n<div class=\"Offers\">\n    <div class=\"Item\">\n        <div class=\"Title\">Offers</div>\n        <offer *ngFor=\"let i of getAllOffers()\" [offer]=\"i\" (openDetail)=\"openDetail($event)\"></offer>\n    </div>\n    <div class=\"Item\">\n        <div class=\"Title\">Requests</div>\n        <offer *ngFor=\"let i of getAllRequests()\" [offer]=\"i\" (openDetail)=\"openDetail($event)\"></offer>\n    </div>\n    <div class=\"Item\">\n        <div class=\"Title\">Questions</div>\n        <offer *ngFor=\"let i of getAllQuestions()\" [offer]=\"i\" (openDetail)=\"openDetail($event)\"></offer>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../business';\nimport { Profile, User } from '../models/user.model';\nimport { AccountService } from '../services/account.service';\nimport { UiService } from '../services/ui.service';\n\n@Component({\n  selector: 'personal-area',\n  templateUrl: './personal-area.component.html',\n  styleUrls: ['./personal-area.component.sass']\n})\nexport class PersonalAreaComponent implements OnInit {\n  user?: User\n  currentUser?: User\n  isEditing: boolean = false\n\n  constructor(\n    private _router: Router,\n    private _route: ActivatedRoute,\n    private _store: Store<AppState>,\n    private _account: AccountService,\n    private _ui: UiService\n  ) { }\n\n  ngOnInit(): void {\n    this._route.queryParams.subscribe(p => {\n      this._store.subscribe(data => {\n        this.currentUser = data.account.user\n      })\n        this._account.getUser({id: p[\"id\"]}).subscribe(data => {\n          if (data.result && data.data.user) {\n            let {id, username, email, first_name, last_name, profile} = data.data.user\n            let {patronymic, phone, age, status, user_in_school_status, city, country, about_me, district} = profile\n            let p = new Profile(profile.id, profile.user, phone, patronymic, age, user_in_school_status, status, country, city, about_me, district)\n            this.user = new User(id, username, email, first_name, last_name, p)\n          }\n        })\n    })\n  }\n\n  startEdit() {\n    if (this.checkUser()) this.isEditing = true\n  }\n\n  endEdit(ok: boolean) {\n    if (ok && this.user && this.checkUser()) {\n      let user = this.user.toJSON()\n      this._account.editProfile(user).subscribe(data => {\n        if (data.result) {\n          this._ui.openWarning({message: data.message, class: \"ok\"})\n        } else {\n          this._ui.openWarning({message: data.message, class: \"error\"})\n        }\n      })\n    } \n    this.isEditing = false\n  }\n\n  checkUserInSchoolStatus(status: \"student\" | \"admin\" | \"teacher\" | \"parent\" | \"moderator\") {\n    if (status === \"student\") return \"Ученик\"\n    else if (status === \"admin\") return \"Админ\"\n    else if (status === \"teacher\") return \"Учитель\"\n    else if (status === \"parent\") return \"Родитель\"\n    else if (status === \"moderator\") return \"Модератор\"\n    else return \"\"\n  }\n\n  checkUser() {\n    return this.user?.id === this.currentUser?.id\n  }\n\n  logout() {\n    this._account.logout().subscribe(data => {\n      if (data.result) this._router.navigateByUrl(\"/login\")\n    })\n  }\n\n}\n","<form class=\"Profile\" *ngIf=\"user\" #editProfileForm=\"ngForm\" (ngSubmit)=\"endEdit(true)\">\n    <div class=\"Profile__Tools-Nav\">\n        <span class=\"Item-1\" *ngIf=\"checkUser()\">\n                <button type=\"button\" class=\"Edit-Btn\" *ngIf=\"!isEditing\" (click)=\"startEdit()\"></button>\n                <button type=\"submit\" class=\"Ok-Edit-Btn\" *ngIf=\"isEditing\"></button>\n                <button type=\"button\" class=\"Not-Edit-Btn\" *ngIf=\"isEditing\" (click)=\"endEdit(false)\"></button>\n        </span>\n        <span class=\"Item-2\" *ngIf=\"checkUser()\" type=\"button\"><button (click)=\"logout()\"></button></span>\n    </div>\n    <main class=\"Profile__Content\">\n        <div class=\"Profile__Content__Status-User-Information\">\n            <div class=\"Item-1\">\n                <div class=\"Avatar\"><img src=\"/media/icons/profile.png\" alt=\"\" /> </div>\n                <div class=\"Username-Status\">\n                    <div class=\"Username\">{{user.fullName}}</div>\n                    <div class=\"Status\">{{user.profile?.status || \"Статус не указан\"}}</div>\n                </div>\n            </div>\n            <div class=\"Item-2\">\n                <div class=\"User-In-School-Status\">{{checkUserInSchoolStatus(user.profile.user_in_school_status)}}</div>\n                <div class=\"Online-Status\">online</div>\n            </div>\n        </div>\n        <div class=\"Profile__Content__Main-User-Information\">\n            <div class=\"Title\">Основное</div>\n            <div class=\"Content\">\n                <div class=\"Item\">\n                    <div class=\"Key\">Имя:</div>\n                    <div class=\"Description\" *ngIf=\"!isEditing\">{{user.firstName}}</div>\n                    <div class=\"Field\" *ngIf=\"isEditing && checkUser()\">\n                        <input name=\"firstName\" required maxlength=\"64\" class=\"Edit-Description\" [(ngModel)]=\"user.firstName\" #firstName=\"ngModel\" />\n                        <span class=\"Validator\" *ngIf=\"firstName.errors?.required\">Обязательное поле.</span>\n                    </div>\n                </div>\n                <div class=\"Item\">\n                    <div class=\"Key\">Фамилия:</div>\n                    <div class=\"Description\" *ngIf=\"!isEditing\">{{user.lastName}}</div>\n                    <div class=\"Field\" *ngIf=\"isEditing && checkUser()\">\n                        <input name=\"lastName\" required maxlength=\"64\" class=\"Edit-Description\" [(ngModel)]=\"user.lastName\" #lastName=\"ngModel\" />\n                        <span class=\"Validator\" *ngIf=\"lastName.errors?.required\">Обязательное поле.</span>\n                    </div>\n                </div>\n                <div class=\"Item\">\n                    <div class=\"Key\">Отчество:</div>\n                    <div class=\"Description\" *ngIf=\"!isEditing\">{{user.profile.patronymic || \"Отчество не указано.\"}}</div>\n                    <div class=\"Field\" *ngIf=\"isEditing && checkUser()\">\n                        <input name=\"patronymic\" required maxlength=\"64\" class=\"Edit-Description\" [(ngModel)]=\"user.profile.patronymic\" #patronymic=\"ngModel\" />\n                        <span class=\"Validator\" *ngIf=\"patronymic.errors?.required\">Обязательное поле.</span>\n                    </div>\n                </div>\n                <div class=\"Item\">\n                    <div class=\"Key\">Возраст:</div>\n                    <div class=\"Description\" *ngIf=\"!isEditing\">{{user.profile.age + \" лет\"}}</div>\n                    <div class=\"Field\" *ngIf=\"isEditing && checkUser()\">\n                        <input name=\"age\" required type=\"number\" class=\"Edit-Description\" [(ngModel)]=\"user.profile.age\" #age=\"ngModel\" max=\"128\" />\n                        <span class=\"Validator\" *ngIf=\"age.errors?.required\">Обязательное поле.</span>\n                    </div>\n                </div>\n                <div class=\"Item\">\n                    <div class=\"Key\">Страна:</div>\n                    <div class=\"Description\" *ngIf=\"!isEditing\">{{user.profile?.country || \"Страна не указана.\"}}</div>\n                    <div class=\"Field\" *ngIf=\"isEditing && checkUser()\">\n                        <input name=\"country\" class=\"Edit-Description\" [(ngModel)]=\"user.profile.country\" #country=\"ngModel\" maxlength=\"128\" />\n                        <span class=\"Validator\" *ngIf=\"country.errors?.maxlength\">Максимальная длина - 128 символов.</span>\n                    </div>\n                </div>\n                <div class=\"Item\">\n                    <div class=\"Key\">Город:</div>\n                    <div class=\"Description\" *ngIf=\"!isEditing\">{{user.profile?.city || \"Город не указан.\"}}</div>\n                    <div class=\"Field\" *ngIf=\"isEditing && checkUser()\">\n                        <input name=\"city\" maxlength=\"64\" class=\"Edit-Description\" [(ngModel)]=\"user.profile.city\" #city=\"ngModel\" maxlength=\"128\" />\n                        <span class=\"Validator\" *ngIf=\"city.errors?.maxlength\">Максимальная длина - 128 символов.</span>\n                    </div>\n                </div>\n                <div class=\"Item\">\n                    <div class=\"Key\">Район/Улица:</div>\n                    <div class=\"Description\" *ngIf=\"!isEditing\">{{user.profile?.district || \"Район/Улица не указаны.\"}}</div>\n                    <div class=\"Field\" *ngIf=\"isEditing && checkUser()\">\n                        <input name=\"district\" maxlength=\"64\" class=\"Edit-Description\" [(ngModel)]=\"user.profile.district\" #district=\"ngModel\" maxlength=\"128\" />\n                        <span class=\"Validator\" *ngIf=\"district.errors?.maxlength\">Максимальная длина - 128 символов.</span>\n                    </div>\n                </div>\n                <div class=\"Item\">\n                    <div class=\"Key\">О себе:</div>\n                    <div class=\"Description\" *ngIf=\"!isEditing\">{{user.profile?.about_me || \"О себе не написано.\"}}</div>\n                    <div class=\"Field\" *ngIf=\"isEditing && checkUser()\">\n                        <textarea name=\"about_me\" maxlength=\"64\" class=\"Edit-Description\" [(ngModel)]=\"user.profile.about_me\" #about_me=\"ngModel\"></textarea>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"Profile__Content__Contacts-User-Information\">\n            <div class=\"Title\">Контакты</div>\n            <div class=\"Content\">\n                <div class=\"Item\">\n                    <div class=\"Key\">Email:</div>\n                    <div class=\"Description\" *ngIf=\"!isEditing\">{{user.email}}</div>\n                    <div class=\"Field\" *ngIf=\"isEditing && checkUser()\">\n                        <input name=\"email\" required maxlength=\"64\" class=\"Edit-Description\" [(ngModel)]=\"user.email\" #email=\"ngModel\" />\n                        <span class=\"Validator\" *ngIf=\"email.errors?.required\">Обязательное поле.</span>\n                    </div>\n                </div>\n                <div class=\"Item\">\n                    <div class=\"Key\">Телефон:</div>\n                    <div class=\"Description\" *ngIf=\"!isEditing\">{{user.profile?.phone || \"Телефон не указан.\"}}</div>\n                    <div class=\"Field\" *ngIf=\"isEditing && checkUser()\">\n                        <input name=\"phone\" required maxlength=\"16\" class=\"Edit-Description\" [(ngModel)]=\"user.profile.phone\" #phone=\"ngModel\" />\n                        <span class=\"Validator\" *ngIf=\"phone.errors?.required\">Обязательное поле.</span>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"Profile__Content__Projects-User-Information\"></div>\n        <div class=\"Profile__Content__Password-Change\"></div>\n    </main>\n</form>","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'progress-bar',\n  templateUrl: './progress-bar.component.html',\n  styleUrls: ['./progress-bar.component.sass']\n})\nexport class ProgressBarComponent implements OnInit {\n  @Input()\n  progress: number = 0\n  @Input()\n  progressColor?: string\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"Progress-Bar\" [style.borderColor]=\"progressColor || 'var(--blue)'\">\n    <div class=\"Progress-Bar-Fill\" [style.width]=\"progress.toString() + '%'\" [style.background]=\"progressColor || 'var(--blue)'\"></div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { IUser } from '../models/user.model';\nimport { AccountService, IRegisterData } from '../services/account.service';\n\n@Component({\n  selector: 'register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.sass']\n})\nexport class RegisterComponent implements OnInit {\n  warning?: string\n  registerFormGroup: IRegisterData = {\n    username: \"\",\n    email: \"\",\n    first_name: \"\",\n    last_name: \"\",\n    phone: \"\",\n    patronymic: \"\",\n    age: undefined,\n    status: undefined,\n    user_in_school_status: \"student\",\n    country: undefined,\n    city: undefined,\n    about_me: undefined,\n    password: \"\",\n    password2: \"\",\n  }\n  isLoading: boolean = false\n  user_in_school_status_options: Array<{key: \"student\" | \"teacher\" | \"parent\", value: string}> = [\n    {key: \"student\", value: \"Ученик\"},\n    {key: \"teacher\", value: \"Учитель\"},\n    {key: \"parent\", value: \"Родитель\"},\n  ]\n\n  constructor(\n    private _account: AccountService,\n    private _router: Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  register() {\n    this.isLoading = true\n    this._account.register(this.registerFormGroup).subscribe(data => {\n      this.isLoading = false\n      if (data.result) {\n        this._router.navigateByUrl(\"login\")\n      } else {\n        this.warning = data.message\n      }\n    })\n  }\n}\n","<img src=\"/media/logo.png\" alt=\"\" />\n<form class=\"Form-Container Login-Form\" #registerForm=\"ngForm\" (ngSubmit)=\"register()\">\n    <account-nav style=\"width: 100%;\"></account-nav>\n    <div class=\"Form-Container__Title\">Регистрация</div>\n    <div class=\"Form-Container__Warning\" *ngIf=\"warning\">{{warning}}</div>\n    <div class=\"Form-Container__Fields-Container\">\n        <div class=\"Field\">\n            <input [name]=\"'username'\" required [placeholder]=\"'Ник'\" [maxLength]=\"64\" [(ngModel)]=\"registerFormGroup.username\" #username=\"ngModel\" />\n            <span *ngIf=\"username.errors?.required && username.touched\">\n                Обязательное поле.\n            </span>\n            <span *ngIf=\"email.errors?.maxlength && email.touched\">\n                Максимальная длина - 64 символа\n            </span>\n        </div>\n        <div class=\"Field\">\n            <input [name]=\"'email'\" required [placeholder]=\"'Email'\" [maxLength]=\"64\" [(ngModel)]=\"registerFormGroup.email\" #email=\"ngModel\" [type]=\"'email'\" />\n            <span *ngIf=\"email.errors?.required && email.touched\">\n                Обязательное поле.\n            </span>\n            <span *ngIf=\"email.errors?.maxlength && email.touched\">\n                Максимальная длина - 64 символа\n            </span>\n        </div>\n        <div class=\"Field\">\n            <input [name]=\"'first_name'\" required [placeholder]=\"'Имя'\" [maxLength]=\"64\" [(ngModel)]=\"registerFormGroup.first_name\" #first_name=\"ngModel\" />\n            <span *ngIf=\"first_name.errors?.required && first_name.touched\">\n                Обязательное полео.\n            </span>\n            <span *ngIf=\"first_name.errors?.maxlength && first_name.touched\">\n                Максимальная длина - 64 символа\n            </span>\n        </div>\n        <div class=\"Field\">\n            <input [name]=\"'last_name'\" required [placeholder]=\"'Фамилия'\" [maxLength]=\"64\" [(ngModel)]=\"registerFormGroup.last_name\" #last_name=\"ngModel\" />\n            <span *ngIf=\"last_name.errors?.required && last_name.touched\">\n                Обязательное полеа.\n            </span>\n            <span *ngIf=\"last_name.errors?.maxlength && last_name.touched\">\n                Максимальная длина - 64 символа\n            </span>\n        </div>\n        <div class=\"Field\">\n            <input [name]=\"'patronymic'\" required [placeholder]=\"'Отчество'\" [maxLength]=\"64\" [(ngModel)]=\"registerFormGroup.patronymic\" #patronymic=\"ngModel\" />\n            <span *ngIf=\"patronymic.errors?.required && patronymic.touched\">\n                Обязательное полеа.\n            </span>\n            <span *ngIf=\"patronymic.errors?.maxlength && patronymic.touched\">\n                Максимальная длина - 64 символа\n            </span>\n        </div>\n        <div class=\"Field\">\n            <input [name]=\"'phone'\" required [placeholder]=\"'Телефон'\" [maxLength]=\"16\" [(ngModel)]=\"registerFormGroup.phone\" #phone=\"ngModel\" />\n            <span *ngIf=\"phone.errors?.required && phone.touched\">\n                Обязательное поле.\n            </span>\n            <span *ngIf=\"phone.errors?.maxlength && phone.touched\">\n                Максимальная длина - 16 символов\n            </span>\n        </div>\n        <div class=\"Field\">\n            <input [name]=\"'age'\" required [placeholder]=\"'Возраст'\" [(ngModel)]=\"registerFormGroup.age\" #age=\"ngModel\" [type]=\"'number'\" />\n            <span *ngIf=\"age.errors?.required && age.touched\">\n                Обязательное поле.\n            </span>\n        </div>\n        <div class=\"Field\">\n            <input [name]=\"'status'\" [placeholder]=\"'Статус'\" [(ngModel)]=\"registerFormGroup.status\" #status=\"ngModel\" />\n        </div>\n        <div class=\"Field\">\n            <select [name]=\"'user_in_school_status'\" *ngIf=\"user_in_school_status_options\" [(ngModel)]=\"registerFormGroup.user_in_school_status\" #user_in_school_status_options=\"ngModel\">\n                <option value=\"student\">\n                    Ученик\n                </option>\n                <option value=\"teacher\">\n                    Учитель\n                </option>\n                <option value=\"parent\">\n                    Родитель\n                </option>\n            </select>\n        </div>\n        <div class=\"Field\">\n            <input [name]=\"'country'\" [placeholder]=\"'Страна'\" [(ngModel)]=\"registerFormGroup.country\" #country=\"ngModel\" maxlength=\"128\" />\n            <span *ngIf=\"country.errors?.maxlength && phone.touched\">\n                Максимальная длина - 128 символов\n            </span>\n        </div>\n        <div class=\"Field\">\n            <input [name]=\"'city'\" [placeholder]=\"'Город'\" [(ngModel)]=\"registerFormGroup.city\" #city=\"ngModel\" maxlength=\"128\" />\n            <span *ngIf=\"city.errors?.maxlength && phone.touched\">\n                Максимальная длина - 128 символов\n            </span>\n        </div>\n        <div class=\"Field\">\n            <input [name]=\"'district'\" [placeholder]=\"'Район/Улица'\" [(ngModel)]=\"registerFormGroup.district\" #district=\"ngModel\" maxlength=\"128\" />\n            <span *ngIf=\"district.errors?.maxlength && phone.touched\">\n                Максимальная длина - 128 символов\n            </span>\n        </div>\n        <div class=\"Field\">\n            <textarea [name]=\"'about_me'\" [placeholder]=\"'Напишите немного о себе, чем вы занимаетесь, Ваши хобби, любимая настолка и т.д.'\" [(ngModel)]=\"registerFormGroup.about_me\" #about_me=\"ngModel\"></textarea>\n        </div>\n        <div class=\"Field\">\n            <input [name]=\"'password'\" required pattern=\"\\S*\\d+\\S*\" [placeholder]=\"'Пароль'\" [type]=\"'password'\" [(ngModel)]=\"registerFormGroup.password\" #password=\"ngModel\" />\n            <span *ngIf=\"password.errors?.required && password.touched\">\n                Обязательное поле.\n            </span>\n            <span *ngIf=\"password.errors?.minlength && password.touched\">\n                Пароль должен быть не короче 8 символов.\n            </span>\n            <span *ngIf=\"password.errors?.pattern && password.touched\">\n                Пароль должен включать в себя буквы, цифры и специальные знаки.\n            </span>\n        </div>\n        <div class=\"Field\">\n            <input [name]=\"'password2'\" required pattern=\"\\S*\\d+\\S*\" [placeholder]=\"'Повтор пароля'\" [type]=\"'password'\" [(ngModel)]=\"registerFormGroup.password2\" #password2=\"ngModel\" />\n            <span *ngIf=\"password2.errors?.required && password2.touched\">\n                Обязательное поле.\n            </span>\n            <span *ngIf=\"password2.errors?.minlength && password2.touched\">\n                Пароль должен быть не короче 8 символов.\n            </span>\n            <span *ngIf=\"password2.errors?.pattern && password2.touched\">\n                Пароль должен включать в себя буквы, цифры и специальные знаки.\n            </span>\n            <span class=\"register-form__validation_block\" *ngIf=\"password.touched && password2.touched && password.value != password2.value\">Пароли не совпадают.</span>\n        </div>\n    </div>\n    <button class=\"Form-Container__Button\" [disabled]=\"registerForm.invalid || password.value != password2.value\">{{isLoading ? \"Загрузка...\" : \"Зарегистрироваться\"}}</button>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AccountService } from '../services/account.service';\n\n@Component({\n  selector: 'reset-password-confirm',\n  templateUrl: './reset-password-confirm.component.html',\n  styleUrls: ['./reset-password-confirm.component.sass']\n})\nexport class ResetPasswordConfirmComponent implements OnInit {\n  warning?: {text: string, class: \"ok\" | \"\"}\n  resetPasswordConfirmFormGroup = {\n    new_password1: \"\",\n    new_password2: \"\",\n    uid: \"\",\n    token: \"\"\n  }\n  isLoading: boolean = false\n  result: boolean = false\n\n  constructor(\n    private _route: ActivatedRoute,\n    private _router: Router,\n    private _account: AccountService\n  ) { }\n\n  ngOnInit(): void {\n    this._route.params.subscribe((p) => {\n      this.resetPasswordConfirmFormGroup[\"uid\"] = p[\"uid\"]\n      this.resetPasswordConfirmFormGroup[\"token\"] = p[\"token\"]\n    })\n  }\n\n  resetPasswordConfirm() {\n    this.isLoading = true\n    this._account.resetPasswordConfirm(this.resetPasswordConfirmFormGroup).subscribe(data => {\n      this.result = data.result\n      this.isLoading = false\n      if (data.result) {\n        this.warning = {text: data.message, class: \"ok\"}\n      } else {\n        console.error(data.message)\n      }\n    })\n  }\n}\n","<img src=\"/media/logo.png\" alt=\"\" />\n<form class=\"Form-Container Login-Form\" #resetPasswordForm=\"ngForm\" (ngSubmit)=\"resetPasswordConfirm()\">\n    <div class=\"Form-Container__Title\">Сброс пароля</div>\n    <div class=\"Form-Container__Warning\" *ngIf=\"warning\" [ngClass]=\"warning['class']\">{{warning[\"text\"]}}</div>\n    <div class=\"Form-Container__Fields-Container\">\n        <div class=\"Field\">\n            <input [name]=\"'new_password1'\" type=\"password\" minlength=\"8\" pattern=\"\\S*\\d+\\S*\" required [placeholder]=\"'Новый пароль'\" [(ngModel)]=\"resetPasswordConfirmFormGroup.new_password1\" #new_password1=\"ngModel\" />\n            <span *ngIf=\"new_password1.errors?.required && new_password1.touched\">\n                Обязательное поле.\n            </span>\n            <span *ngIf=\"new_password1.errors?.minlength && new_password1.touched\">\n                Пароль должен быть не короче 8 символов.\n            </span>\n            <span *ngIf=\"new_password1.errors?.pattern && new_password1.touched\">\n                Пароль должен включать в себя буквы, цифры и специальные знаки.\n            </span>\n        </div>\n        <div class=\"Field\">\n            <input [name]=\"'new_password2'\" type=\"password\" minlength=\"8\" pattern=\"\\S*\\d+\\S*\" required [placeholder]=\"'Повтор нового пароля'\" [(ngModel)]=\"resetPasswordConfirmFormGroup.new_password2\" #new_password2=\"ngModel\" />\n            <span *ngIf=\"new_password2.errors?.required && new_password2.touched\">\n                Обязательное поле.\n            </span>\n            <span *ngIf=\"new_password2.errors?.minlength && new_password2.touched\">\n                Пароль должен быть не короче 8 символов.\n            </span>\n            <span *ngIf=\"new_password2.errors?.pattern && new_password2.touched\">\n                Пароль должен включать в себя буквы, цифры и специальные знаки.\n            </span>\n            <span class=\"register-form__validation_block\" *ngIf=\"new_password1.touched && new_password2.touched && new_password1.value != new_password2.value\">Пароли не совпадают.</span>\n        </div>\n    </div>\n    <div class=\"Form-Container__Links\" *ngIf=\"result\">\n        <span>Успешно сохранили пароль? <a routerLink=\"/login\">Войти</a></span>\n    </div>\n    <button class=\"Form-Container__Button\" [disabled]=\"resetPasswordForm.invalid || new_password1.value != new_password2.value ||isLoading\">{{isLoading ? \"Загрузка...\" : \"Сохранить\"}}</button>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { AccountService } from '../services/account.service';\n\n@Component({\n  selector: 'reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.sass']\n})\nexport class ResetPasswordComponent implements OnInit {\n  resetPasswordFormGroup = {\n    email: ''\n  }\n  warning?: {text: string, class: \"ok\" | \"\"}\n  isLoading: boolean = false\n\n  constructor(private _account: AccountService) { }\n\n  ngOnInit(): void {\n  }\n\n  resetPassword() {\n    this.isLoading = true\n    this._account.resetPassword(this.resetPasswordFormGroup).subscribe(data => {\n      this.isLoading = false\n      if (data.result) {\n        this.warning = {text: data.message, class: \"ok\"}\n      } else {\n        this.warning = {text: data.message, class: \"\"}\n      }\n    })\n  }\n\n}\n","<img src=\"/media/logo.png\" alt=\"\" />\n<form class=\"Form-Container Login-Form\" #resetPasswordForm=\"ngForm\" (ngSubmit)=\"resetPassword()\">\n    <div class=\"Form-Container__Title\">Сброс пароля</div>\n    <div class=\"Form-Container__Warning\" *ngIf=\"warning\" [ngClass]=\"warning['class']\">{{warning[\"text\"]}}</div>\n    <div class=\"Form-Container__Fields-Container\">\n        <div class=\"Field\">\n            <input [name]=\"'email'\" required [placeholder]=\"'Email'\" [(ngModel)]=\"resetPasswordFormGroup.email\" #email=\"ngModel\" />\n            <span *ngIf=\"email.invalid && email.touched\">\n                Обязательное поле.\n            </span>\n        </div>\n    </div>\n    <button class=\"Form-Container__Button\" [disabled]=\"resetPasswordForm.invalid\">{{isLoading ? \"Загрузка...\" : \"Сбросить\"}}</button>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { IUser } from '../models/user.model';\nimport { AccountService, SearchUserQuery } from '../services/account.service';\n\n@Component({\n  selector: 'app-search-users',\n  templateUrl: './search-users.component.html',\n  styleUrls: ['./search-users.component.sass']\n})\nexport class SearchUsersComponent implements OnInit {\n  detailsIsOpen: boolean = false\n\n  users: IUser[] = []\n\n  q: string = \"\"\n  qDetails = {\n    username: \"\",\n    first_name: \"\",\n    last_name: \"\",\n    country: \"\",\n    city: \"\",\n    district: \"\",\n  }\n\n  constructor(private _account: AccountService) { }\n\n  ngOnInit(): void {\n    this.search(\"\")\n  }\n\n  search(q: SearchUserQuery) {\n    this._account.searchUser(q).subscribe(data => {\n      if (data.data.users) this.users = data.data.users\n      else console.error(data.message)\n    })\n  }\n\n  getUserStatus(u: IUser) {\n    let s = \"\"\n    if(u.profile.status) s = u.profile.status\n    else if(u.profile.city && u.profile.country) s = u.profile.city + \", \" + u.profile.country\n    else s = u.profile.phone\n    return s.substr(0, 100)\n  }\n\n}\n","<div class=\"Search-Users\">\n    <form class=\"Search-Container\" #searchForm=\"ngForm\">\n        <i class=\"Search\"></i>\n        <input class=\"Query\" name=\"q\" [(ngModel)]=\"q\" (ngModelChange)=\"search(q)\" placeholder=\"Поиск...\" />\n        <div class=\"Settings\" #settingsIcon>\n            <button type=\"button\" class=\"Settings-Icon-Btn\" (click)=\"detailsIsOpen = !detailsIsOpen\"><i></i></button>\n            <div *ngIf=\"detailsIsOpen\" class=\"Details\" #details [style.top]=\"settingsIcon.getClientRects()[0]['y'] + 30 + 'px'\" [style.left]=\"settingsIcon.getClientRects()[0]['x'] - details.getClientRects()[0]['width'] + 30 + 'px'\">\n                <div class=\"Title\">Расширеный поиск</div>\n                <form class=\"Items-Container\" #detailsSearchForm=\"ngForm\" (ngSubmit)=\"search(qDetails)\">\n                    <div class=\"Item\">\n                        <input name=\"username\" placeholder=\"Ник\" [(ngModel)]=\"qDetails.username\" />\n                    </div>\n                    <div class=\"Item\">\n                        <input name=\"first_name\" placeholder=\"Имя\" [(ngModel)]=\"qDetails.first_name\" />\n                        <input name=\"last_name\" placeholder=\"Фамилия\" [(ngModel)]=\"qDetails.last_name\" />\n                    </div>\n                    <div class=\"Item\">\n                        <input name=\"district\" placeholder=\"Район/Улица\" [(ngModel)]=\"qDetails.district\" />\n                        <input name=\"city\" placeholder=\"Город\" [(ngModel)]=\"qDetails.city\" />\n                        <input name=\"country\" placeholder=\"Страна\" [(ngModel)]=\"qDetails.country\" />\n                    </div>\n                    <button class=\"Button\">Поиск</button>\n                </form>\n            </div>\n        </div>\n    </form>\n    <div class=\"Searched-Users\">\n        <a [routerLink]=\"'/profile'\" [queryParams]=\"{id: i.id}\" *ngFor=\"let i of users\" class=\"Item\">\n            <div class=\"Ava\">\n                <img src=\"/media/icons/profile.png\" />\n            </div>\n            <div class=\"Main-Info\">\n                <div class=\"Name\">{{i.first_name + \" \" + i.last_name}}</div>\n                <div class=\"Status\">{{getUserStatus(i)}}</div>\n            </div>\n            <!-- <div class=\"Actions\">\n                <div class=\"Go-To-Chat\"></div>\n            </div>-->\n        </a>\n    </div>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { APIResponse } from '../models/api.model';\nimport { IUser } from '../models/user.model';\n\nexport interface ILoginData {\n  username: string\n  password: string\n}\n\nexport interface IRegisterData {\n  username: string\n  email: string\n  first_name: string\n  last_name: string\n  phone: string\n  patronymic: string\n  age?: number\n  status?: string\n  user_in_school_status: \"student\" | \"teacher\" | \"parent\"\n  country?: string\n  city?: string\n  about_me?: string\n  district?: string\n  password: string\n  password2: string\n}\n\nexport interface IEditProfileData extends IUser {}\n\nexport interface IResetPasswordData {\n  email: string\n}\n\nexport interface IResetPasswordConfirmData {\n  new_password1: string\n  new_password2: string\n  uid: string\n  token: string\n}\nexport type SearchUserQuery = \n  | string \n  | {\n    username?: string,\n    first_name?: string,\n    last_name?: string,\n    country?: string,\n    city?: string,\n    bistrict?: string,\n  }\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService {\n\n  constructor(\n    private _http: HttpClient\n  ) { }\n\n  getUser(query?: {id: number}) {\n    let token = this._getCookie(\"csrftoken\")\n    return this._http.get<APIResponse<{user?: IUser}>>(`/api/v1/account/${query?.id ? \"?id=\" + query?.id : \"\"}`, {\n      headers: {\"XCSRF-Token\": token}\n    })\n  }\n\n  logout() {\n    let token = this._getCookie(\"csrftoken\")\n    return this._http.post<APIResponse>(\"/api/v1/account/logout/\", {csrfmiddlewaretoken: token}, {\n      headers: {\"X-CSRFToken\": token}\n    })\n  }\n\n  login(data: ILoginData) {\n    let token = this._getCookie(\"csrftoken\")\n    return this._http.post<APIResponse<{user?: IUser}>>(\"/api/v1/account/login/\", {csrfmiddlewaretoken: token, ...data}, {\n      headers: {\"X-CSRFToken\": token}\n    })\n  }\n\n  register(data: IRegisterData) {\n    let token = this._getCookie(\"csrftoken\")\n    return this._http.post<APIResponse<{user?: IUser}>>(\"/api/v1/account/register/\", {csrfmiddlewaretoken: token, ...data}, {\n      headers: {\"X-CSRFToken\": token}\n    })\n  }\n\n  editProfile(data: IEditProfileData) {\n    let token = this._getCookie(\"csrftoken\")\n    return this._http.put<APIResponse<{errors?: [{[key: string]: string}]}>>(\"/api/v1/account/\", {csrfmiddlewaretoken: token, ...data}, {\n      headers: {\"X-CSRFToken\": token}\n    })\n  }\n\n  resetPassword(data: IResetPasswordData) {\n    let token = this._getCookie(\"csrftoken\")\n    return this._http.post<APIResponse>(\"/api/v1/account/password/reset/\", {csrfmiddlewaretoken: token, ...data}, {\n      headers: {\"X-CSRFToken\": token}\n    })\n  }\n\n  resetPasswordConfirm(data: IResetPasswordConfirmData) {\n    let token = this._getCookie(\"csrftoken\")\n    return this._http.post<APIResponse>(`/api/v1/account/password/reset/confirm/${data.uid}/${data.token}/`, {csrfmiddlewaretoken: token, ...data}, {\n      headers: {\"X-CSRFToken\": token}\n    })\n  }\n\n  searchUser(q: SearchUserQuery) {\n    let token = this._getCookie(\"csrftoken\")\n    return this._http.post<APIResponse<{users?: IUser[]}>>(`/api/v1/account/search/`, {csrfmiddlewaretoken: token, q}, {\n      headers: {\"X-CSRFToken\": token}\n    })\n  }\n\n  private _getCookie(name: string): string {\n    let ca: Array<string> = document.cookie.split(';');\n    let caLen: number = ca.length;\n    let cookieName = `${name}=`;\n    let c: string;\n    for (let i: number = 0; i < caLen; i += 1) {\n        c = ca[i].replace(/^\\s+/g, '');\n        if (c.indexOf(cookieName) == 0) {\n            return c.substring(cookieName.length, c.length);\n        }\n    }\n    return '';\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { IChat, ICreateMessage, IEditChat } from '../models/chat.model';\nimport { WebsocketService } from './websocket.service';\nimport { APIResponse } from '../models/api.model';\nimport { IUser } from '../models/user.model';\n\nexport type WSMessage = {\n  readonly action: \"send_message\"\n  readonly message: ICreateMessage\n} | {\n  readonly action: \"writing_message\"\n  readonly user: number\n} | {\n  readonly action: \"read_messages\"\n  readonly chat: number\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChatService {\n\n  constructor(\n    private _messages: Subject<WSMessage>,\n    private _http: HttpClient, \n    private _ws: WebsocketService\n  ) { }\n\n  connectToMessages(id: number) {\n    this._messages = this._ws.connect(`ws://127.0.0.1:8000/chat/${id}/`)\n  }\n\n  getUserChats() {\n    return this._http.get<APIResponse<{chats?: IChat[]}>>(`/api/v1/chats/`, {\n      headers: {\"X-CSRFToken\": this._getCookie(\"csrftoken\")}\n    })\n  }\n\n  getChatById(id: number) {\n    return this._http.get<APIResponse<{chat?: IChat}>>(`/api/v1/chats/?id=${id}`, {\n      headers: {\"X-CSRFToken\": this._getCookie(\"csrftoken\")}\n    })\n  }\n\n  getOrCreateChat(users: IUser[]) {\n    return this._http.post<APIResponse<{chat?: IChat}>>(`/api/v1/chats/`, {users}, {\n      headers: {\"X-CSRFToken\": this._getCookie(\"csrftoken\")}\n    })\n  }\n\n  editChat(chat: IEditChat, chatId: number, action?: \"remove_user\") {\n    return this._http.put<APIResponse<{chat?: IChat}>>(`/api/v1/chats/?id=${chatId}&action=${action}`, {csrfmiddlewaretoken: this._getCookie(\"csrftoken\"), ...chat}, {\n      headers: {\"X-CSRFToken\": this._getCookie(\"csrftoken\")}\n    })\n  }\n\n  signout(id: number) {\n    return this._http.put<APIResponse<{chat?: IChat}>>(`/api/v1/chats/?id=${id}&action=remove_user`, {csrfmiddlewaretoken: this._getCookie(\"csrftoken\"), id}, {\n      headers: {\"X-CSRFToken\": this._getCookie(\"csrftoken\")}\n    })\n  }\n\n  ban(id: number, userId: number) {\n    return this._http.put<APIResponse<{chat?: IChat}>>(`/api/v1/chats/?id=${id}&userId=${userId}&action=ban_user`, {csrfmiddlewaretoken: this._getCookie(\"csrftoken\"), id}, {\n      headers: {\"X-CSRFToken\": this._getCookie(\"csrftoken\")}\n    })\n  }\n\n  uploadFile(fd: FormData, type: \"img\" | \"doc\") {\n    return this._http.post<APIResponse<{id?: number}>>(`/api/v1/chats/messages/upload/?type=${type}`, fd, {\n      headers: {\"X-CSRFToken\": this._getCookie(\"csrftoken\")},\n      reportProgress: true,\n      observe: 'events'\n    })\n  }\n\n  deleteUploadedFile(id: number, type: \"img\" | \"doc\") {\n    return this._http.delete<APIResponse<{id?: number}>>(`/api/v1/chats/messages/upload/?type=${type}&id=${id}`, {\n      headers: {\"X-CSRFToken\": this._getCookie(\"csrftoken\")}\n    })\n  }\n\n  sendMessage(message: ICreateMessage) {\n    this._messages.next({\"action\": \"send_message\", message})\n  }\n\n  writingMessage(user: number) {\n    this._messages.next({\"action\": \"writing_message\", user})\n  }\n\n  readMessage(chat: number) {\n    this._messages.next({\"action\": \"read_messages\", chat})\n  }\n\n  subscribeToMessages() {\n    return this._messages\n  }\n  \n  private _getCookie(name: string): string {\n    let ca: Array<string> = document.cookie.split(';')\n    let caLen: number = ca.length\n    let cookieName = `${name}=`\n    let c: string\n    for (let i: number = 0; i < caLen; i += 1) {\n        c = ca[i].replace(/^\\s+/g, '')\n        if (c.indexOf(cookieName) == 0) {\n            return c.substring(cookieName.length, c.length)\n        }\n    }\n    return ''\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { APIResponse } from '../models/api.model';\nimport { IBaseOffer, IOffer } from '../models/offers.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OffersService {\n\n  constructor(private _http: HttpClient) { }\n\n  getAllOffers() {\n    let sub = this._http.get<APIResponse<{offers?: IOffer[]}>>(\"/api/v1/offers/\", {\n      headers: {\n        \"X-CSRFToken\": this._getCookie(\"csrftoken\")\n      }\n    })\n    return sub\n  }\n\n  createOffer(offer: IBaseOffer) {\n    let sub = this._http.post<APIResponse<{offers?: IOffer[]}>>(\"/api/v1/offers/\", {...offer}, {\n      headers: {\n        \"X-CSRFToken\": this._getCookie(\"csrftoken\")\n      }\n    })\n    return sub\n  }\n\n  editOffer(id: number, newOffer: IOffer) {\n\n  }\n\n  delteOffer(id: number) {\n\n  }\n\n  filterOffers() {\n\n  }\n  \n  private _getCookie(name: string): string {\n    let ca: Array<string> = document.cookie.split(';')\n    let caLen: number = ca.length\n    let cookieName = `${name}=`\n    let c: string\n    for (let i: number = 0; i < caLen; i += 1) {\n        c = ca[i].replace(/^\\s+/g, '')\n        if (c.indexOf(cookieName) == 0) {\n            return c.substring(cookieName.length, c.length)\n        }\n    }\n    return ''\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../business';\nimport { CloseWarningWindow, OpenWarningWindow } from '../business/actions/ui.actions';\nimport { Warning } from '../warning-window/warning-window.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UiService {\n\n  constructor(\n    private _store: Store<AppState>\n  ) { }\n\n  openWarning(warning: Warning) {\n    this._store.dispatch(new OpenWarningWindow(warning))\n  }\n\n  closeWarning(warning: Warning) {\n    this._store.dispatch(new CloseWarningWindow(warning))\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { WSMessage } from './chat.service';\nimport { webSocket } from 'rxjs/webSocket';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebsocketService {\n  private _reconnectedCount: number = 0\n\n  constructor(private _subject: Subject<WSMessage>) { }\n\n  public connect(url: string): Subject<WSMessage> {\n    this._subject = webSocket<WSMessage>(url)\n    return this._subject\n  }\n}\n","import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Component, HostBinding, Input, OnInit } from '@angular/core';\nimport { interval, Subscription } from 'rxjs';\nimport { UiService } from '../services/ui.service';\n\nexport type Warning = {\n  id?: number\n  message: string\n  class: \"ok\" | \"error\"\n} | undefined\n\n@Component({\n  selector: 'warning',\n  templateUrl: './warning-window.component.html',\n  styleUrls: ['./warning-window.component.sass'],\n  animations: [\n    trigger('addWarning', [\n      state('close', style({ top: \"-1000px\" })),\n      state('open', style({ top: '100px' })),\n      transition('close<=>open', animate('0.3s')),\n    ]),\n  ],\n})\nexport class WarningWindowComponent implements OnInit {\n  @Input()\n  warning: Warning\n  \n  @HostBinding('@addWarning')\n\n  state: \"open\" | \"close\" = \"close\"\n\n  private _interval?: Subscription\n\n  constructor(\n    private _ui: UiService\n  ) { }\n\n  ngOnInit(): void {\n    this.state = \"open\"\n    this._interval = interval(7000).subscribe(() => {\n      this.state = \"close\"\n      this._ui.closeWarning(this.warning)\n      this._interval?.unsubscribe()\n    })\n  }\n\n  close() {\n    this.state = \"close\"\n    this._interval?.unsubscribe()\n    this._interval = interval(300).subscribe(() => {\n      this._ui.closeWarning(this.warning)\n      this._interval?.unsubscribe()\n    })\n  }\n\n}\n","<div class=\"Warning__Content\">{{warning?.message}}</div>\n<button (click)=\"close()\">&times;</button>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///"}