{"version":3,"file":"main.js","mappings":"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","sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/account-nav/account-nav.component.ts","./src/app/account-nav/account-nav.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/business/actions/account.actions.ts","./src/app/business/index.ts","./src/app/business/reducers/account.reducer.ts","./src/app/head/head.component.ts","./src/app/head/head.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/logout/logout.component.ts","./src/app/logout/logout.component.html","./src/app/models/user.model.ts","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/reset-password-confirm/reset-password-confirm.component.ts","./src/app/reset-password-confirm/reset-password-confirm.component.html","./src/app/reset-password/reset-password.component.ts","./src/app/reset-password/reset-password.component.html","./src/app/services/account.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'account-nav',\n  templateUrl: './account-nav.component.html',\n  styleUrls: ['./account-nav.component.sass']\n})\nexport class AccountNavComponent implements OnInit {\n\n  navItems = [\n    {text: \"Авторизация\", to: \"/login\"},\n    {text: \"Регистрация\", to: \"/register\"}\n  ]\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"Account-Nav\">\n    <div class=\"Account-Nav__Item\" *ngFor=\"let i of navItems\">\n        <a [routerLink]=\"i.to\" routerLinkActive=\"Active\">{{i.text}}</a>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ResetPasswordConfirmComponent } from './reset-password-confirm/reset-password-confirm.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\n\nconst routes: Routes = [\n {path: \"home\", component: HomeComponent},\n {path: \"login\", component: LoginComponent},\n {path: \"logout\", component: LogoutComponent},\n {path: \"register\", component: RegisterComponent},\n {path: \"reset-password\", component: ResetPasswordComponent},\n {path: \"reset-password/confirm/:uid/:token\", component: ResetPasswordConfirmComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { AppState } from './business';\nimport { SetUser } from './business/actions/account.actions';\nimport { Profile, User } from './models/user.model';\nimport { AccountService } from './services/account.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\nexport class AppComponent implements OnInit {\n  title = 'frontend';\n\n  user?: User\n\n  constructor(\n    private _router: Router,\n    private _store: Store<AppState>,\n    private _accountService: AccountService\n  ) {\n    this._getUser()\n    this._router.events.subscribe((e) => {\n      if (e instanceof NavigationEnd) {\n        this._getUser()\n      }\n    })\n    this._store.subscribe(data => {\n      this.user = data.account.user\n    })\n  }\n\n  ngOnInit() {\n  }\n\n  private _getUser() {\n    this._accountService.getUser().subscribe(data => {\n      let JSONUser = data.data.user\n      if (!JSONUser) {\n        let path = location.pathname.split(\"/\")[1]\n        if (path === \"home\" || path === \"news\" || path === \"events\" || path === \"chats\" || path === \"chat\") {\n          console.log(location.pathname.split(\"/\")[1])\n          this._router.navigateByUrl(\"login\")\n        }\n      }\n      \n      else {\n        let {id, username, email, first_name, last_name, profile} = JSONUser\n        let {user, patronymic, age, phone} = profile\n        let p = new Profile(profile.id, user, phone, patronymic, age)\n        let u = new User(id, username, email, first_name, last_name, p)\n        this._store.dispatch(new SetUser(u))\n        this.user = u\n        if (location.pathname === \"/\") {\n          this._router.navigateByUrl(\"home\")\n        } \n      }\n    })\n  }\n}\n","<navbar *ngIf=\"user\"></navbar>\n<div class=\"C\" [style.marginLeft]=\"user ? '320px' : 0\">\n    <headerbar *ngIf=\"user\"></headerbar>\n    <router-outlet></router-outlet>\n</div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { StoreModule } from '@ngrx/store';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { HeadComponent } from './head/head.component';\nimport { reducers } from './business';\nimport { LoginComponent } from './login/login.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { RegisterComponent } from './register/register.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\nimport { ResetPasswordConfirmComponent } from './reset-password-confirm/reset-password-confirm.component';\nimport { AccountNavComponent } from './account-nav/account-nav.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    NavbarComponent,\n    HeadComponent,\n    LoginComponent,\n    LogoutComponent,\n    RegisterComponent,\n    ResetPasswordComponent,\n    ResetPasswordConfirmComponent,\n    AccountNavComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    StoreModule,\n    StoreModule.forRoot(reducers)\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Action, createAction, props } from '@ngrx/store';\r\nimport { User } from 'src/app/models/user.model';\r\n\r\nexport enum AccountActions {\r\n    SetUser = '[Account Page] Set User',\r\n}\r\n\r\nexport class SetUser implements Action {\r\n    readonly type = AccountActions.SetUser\r\n\r\n    constructor(public user?: User) { }\r\n}\r\n\r\nexport type AccountUnion = SetUser","import { ActionReducerMap } from '@ngrx/store'\r\nimport { accountReducer, AccountState } from './reducers/account.reducer'\r\n\r\nexport const rootReducer = {}\r\n\r\nexport interface AppState {\r\n  account: AccountState\r\n}\r\n\r\nexport const reducers: ActionReducerMap<AppState, any> = {\r\n  account: accountReducer\r\n}","import { AccountActions, AccountUnion } from '../actions/account.actions';\r\nimport { User } from '../../models/user.model'; \r\n\r\nexport interface AccountState {\r\n    user?: User\r\n}\r\n\r\nexport const initialState: AccountState = {\r\n    user: undefined\r\n}\r\n \r\nexport function accountReducer(state: AccountState = initialState, action: AccountUnion): AccountState {\r\n    switch (action.type) {\r\n      case AccountActions.SetUser:\r\n        return {\r\n          user: action.user,\r\n        }\r\n      default:\r\n        return state\r\n    }\r\n}\r\n  ","import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../business';\nimport { User } from '../models/user.model';\n\n@Component({\n  selector: 'headerbar',\n  templateUrl: './head.component.html',\n  styleUrls: ['./head.component.sass']\n})\nexport class HeadComponent implements OnInit {\n  user?: User\n  submenuIsOpen: boolean = false\n\n  constructor(\n    private _store: Store<AppState>\n  ) {\n    this._store.subscribe(data => {\n      this.user = data.account.user\n    })\n  }\n\n  ngOnInit(): void {\n  }\n\n  openS() {\n    this.submenuIsOpen = true\n  }\n\n  closeS() {\n    this.submenuIsOpen = false\n  }\n\n}\n","<div class=\"Header\">\n    <div class=\"Header__Title\">\n        <div class=\"Header__Title__Logo\">logo</div>\n        <div class=\"Header__Title__Text\">Title</div>\n    </div>\n    <div class=\"Header__Auth-Container\" (mouseenter)=\"openS()\" (mouseleave)=\"closeS()\">\n        <div class=\"Header__Auth-Container__User-Info\">\n            <div class=\"Header__Auth-Container__User-Info__Ava\"></div>\n            <div class=\"Header__Auth-Container__User-Info__Username\">{{user?.username}}</div>\n        </div>\n        <div class=\"Header__Auth-Container__Submenu\" *ngIf=\"submenuIsOpen\">\n            <div class=\"Header__Auth-Container__Submenu__Item LK\">Личный кабинет</div>\n            <a routerLink=\"logout\" class=\"Header__Auth-Container__Submenu__Item LogOut\">Выйти</a>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\n\n@Component({\n  selector: 'home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.sass']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private _router: Router) {\n    _router.events.subscribe(e => {\n      if(e instanceof NavigationEnd) {\n        let elID = e.url.split(\"#\")[1]\n        let el = document.getElementById(elID)\n        if(el) {\n          el.scrollIntoView({\n            behavior: 'smooth',\n            block: 'start'\n          })\n        }\n      }\n    })\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<main class=\"Content\">\n    <div class=\"About\" [id]=\"'About'\">\n        <div class=\"Title\">О приложении</div>\n        <div class=\"About__Content\">\n            <div class=\"Content__Text\">\n                Текст...\n            </div>\n            <div class=\"Content__Images\">Картинки</div>\n        </div>\n    </div>\n    <div class=\"Pluses\" [id]=\"'Pluses'\">\n        <div class=\"Title\">Плюсы</div>\n        <div class=\"Pluses__Content\">\n            <ul class=\"Pluses__Content__List\">\n                <li class=\"Item\">Текст 1</li>\n                <li class=\"Item\">Текст 2</li>\n                <li class=\"Item\">Текст 3</li>\n                <li class=\"Item\">Текст 4</li>\n            </ul>\n        </div>\n    </div>\n    <div class=\"Instruction\" [id]=\"'Instruction'\">\n        <div class=\"Title\">\n            Инструкция\n        </div>\n        <div class=\"Instruction__Content\">\n            Текст...\n        </div>\n    </div>\n</main>","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, NgForm, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { interval } from 'rxjs';\nimport { AppState } from '../business';\nimport { AccountService, ILoginData } from '../services/account.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.sass']\n})\nexport class LoginComponent implements OnInit {\n  loginFormGroup: ILoginData = {\n    username: \"\",\n    password: \"\"\n  }\n  warning?: string\n  isLoading: boolean = false\n\n  constructor(private _account: AccountService, private _router: Router, private _store: Store<AppState>) { }\n\n  ngOnInit(): void {\n  }\n\n  login(form: NgForm) {\n    this.isLoading = true\n    this._account.login(form.value).subscribe(data => {\n      this.isLoading = false\n      if (data.data.user) {\n        this._router.navigateByUrl(\"home\")\n      } else {\n        this.warning = data.message\n        interval(10000).subscribe(() => {\n          this.warning = undefined\n        })\n      }\n    })\n  }\n\n}\n","<form class=\"Form-Container Login-Form\" #loginForm=\"ngForm\" (ngSubmit)=\"login(loginForm)\">\n    <account-nav style=\"width: 100%;\"></account-nav>\n    <div class=\"Form-Container__Title\">Авторизация</div>\n    <div class=\"Form-Container__Warning\" *ngIf=\"warning\">{{warning}}</div>\n    <div class=\"Form-Container__Fields-Container\">\n        <div class=\"Field\">\n            <input [name]=\"'username'\" required [placeholder]=\"'Ник'\" [(ngModel)]=\"loginFormGroup.username\" #username=\"ngModel\" />\n            <span *ngIf=\"username.invalid && username.touched\">\n                Не указан ник.\n            </span>\n        </div>\n        <div class=\"Field\">\n            <input [name]=\"'password'\" required [placeholder]=\"'Пароль'\" [type]=\"'password'\" [(ngModel)]=\"loginFormGroup.password\" #password=\"ngModel\" />\n            <span *ngIf=\"password.invalid && password.touched\">\n                Не указан пароль.\n            </span>\n        </div>\n    </div>\n    <div class=\"Form-Container__Links\">\n        <span>Забыли пароль? <a routerLink=\"/reset-password\">Сбросить</a></span>\n    </div>\n    <button class=\"Form-Container__Button\" [disabled]=\"loginForm.invalid\">{{isLoading ? \"Загрузка...\" : \"Войти\"}}</button>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../business';\nimport { SetUser } from '../business/actions/account.actions';\nimport { AccountService } from '../services/account.service';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.sass']\n})\nexport class LogoutComponent implements OnInit {\n\n  constructor(private _accountService: AccountService, private _store: Store<AppState>, private _router: Router) {  }\n\n  ngOnInit(): void {\n    this._accountService.logout().subscribe((data) => {\n      this._store.dispatch(new SetUser(undefined))\n      this._router.navigateByUrl(\"login\")\n    })\n  }\n\n}\n","<p>Logout successful!</p>","export interface IUser {\r\n  readonly id: number\r\n  readonly username: string\r\n  readonly email: string\r\n  readonly first_name: string\r\n  readonly last_name: string\r\n  readonly profile: IProfile\r\n}\r\n\r\nexport interface IProfile {\r\n  readonly id: number\r\n  readonly user: number\r\n  readonly phone: string\r\n  readonly patronymic: string\r\n  readonly age: number\r\n}\r\n\r\nexport class User {\r\n  constructor(\r\n    private _id: number,\r\n    private _username: string,\r\n    private _email: string,\r\n    private _first_name: string,\r\n    private _last_name: string,\r\n    private _profile: Profile\r\n  ) { }\r\n\r\n  get id() {\r\n    return this._id\r\n  }\r\n  \r\n  get username() {\r\n    return this._username\r\n  }\r\n\r\n  set username(username: string) {\r\n    this._username = username\r\n  }\r\n\r\n  get email() {\r\n    return this._email\r\n  }\r\n\r\n  set email(email: string) {\r\n    this._email = email\r\n  }\r\n\r\n  get firstName() {\r\n    return this._first_name\r\n  }\r\n\r\n  set firstName(firstName: string) {\r\n    this._first_name = firstName\r\n  }\r\n\r\n  get lastName() {\r\n    return this._last_name\r\n  }\r\n\r\n  set lastName(lastName: string) {\r\n    this._last_name = lastName\r\n  }\r\n\r\n  get fullName() {\r\n    return this._first_name + \" \" + this._last_name\r\n  }\r\n\r\n  get profile() {\r\n    return this._profile\r\n  }\r\n\r\n  set profile(profile: Profile) {\r\n    this._profile = profile\r\n  }\r\n}\r\n\r\nexport class Profile {\r\n  constructor(\r\n    private _id: number,\r\n    private _user: number,\r\n    private _phone: string,\r\n    private _patronymic: string,\r\n    private _age: number,\r\n  ) { }\r\n  get id() {\r\n    return this._id\r\n  }\r\n\r\n  get userId() {\r\n    return this._user\r\n  }\r\n\r\n  get phone() {\r\n    return this._phone\r\n  }\r\n\r\n  set phone(phone: string) {\r\n    this._phone = phone\r\n  }\r\n\r\n  get patronymic() {\r\n    return this._patronymic\r\n  }\r\n\r\n  set patronymic(patronymic: string) {\r\n    this._patronymic = patronymic\r\n  }\r\n\r\n  get age() {\r\n    return this._age\r\n  }\r\n\r\n  set age(age: number) {\r\n    this._age = age\r\n  }\r\n}","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\n\ntype CanOpenLinks =\n  | \"home\"\n  | \"news\"\n  | \"ads\"\n  | \"chats\"\n\n@Component({\n  selector: 'navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.sass']\n})\nexport class NavbarComponent implements OnInit {\n  openLinks: CanOpenLinks[] | any = JSON.parse(localStorage.getItem(\"openLinks\") || \"[]\")\n  location = window.location\n  hash: string = \"\"\n\n  constructor(private _router: Router) {\n    _router.events.subscribe(e => {\n      if(e instanceof NavigationEnd) {\n        this.location = window.location\n        this.hash = window.location.hash\n      }\n    })\n  }\n\n  ngOnInit(): void {\n  }\n\n  openLink(n: CanOpenLinks) {\n    let ol = JSON.parse(localStorage.getItem(\"openLinks\") || \"[]\")\n    ol ? localStorage.setItem(\"openLinks\", JSON.stringify([...ol, n])) : localStorage.setItem(\"openLinks\", JSON.stringify([n]))\n    this.openLinks = JSON.parse(localStorage.getItem(\"openLinks\") || \"[]\")\n  }\n\n  closeLink(n: CanOpenLinks) {\n    let ol = JSON.parse(localStorage.getItem(\"openLinks\") || \"[]\")\n    if (ol) {\n      let olCopy = [...ol]\n      olCopy.splice(olCopy.indexOf(n), 1)\n      localStorage.setItem(\"openLinks\", JSON.stringify(olCopy))\n    } else {\n      throw new Error(\"Open links is undefined\")\n    }\n    this.openLinks = JSON.parse(localStorage.getItem(\"openLinks\") || \"[]\")\n  }\n\n  checkLinkIsOpen(n: CanOpenLinks) {\n    return this.openLinks.indexOf(n) !== -1\n  }\n\n}\n","<ul class=\"Navbar\">\n    <li class=\"Navbar__Item\">\n        <div class=\"Main-Link Home-Main-Link\">\n            <a routerLink=\"/home\" [fragment]=\"'About'\" routerLinkActive=\"active\" class=\"Main-Link__Text\">Главная</a>\n            <i class=\"Main-Link__OpenClose-Arrow\" (click)=\"location.pathname.split('/')[1] === 'home' ? undefined : checkLinkIsOpen('home') ? closeLink('home') : openLink('home')\" [ngClass]=\"{'Rotated': checkLinkIsOpen('home') || location.pathname.split('/')[1] === 'home'}\">\n            </i>\n        </div>\n        <ul class=\"Links-Container\" *ngIf=\"checkLinkIsOpen('home') || location.pathname.split('/')[1] === 'home'\">\n            <li (click)=\"hash = '#About'\" class=\"Item\" [ngClass]=\"{'active': hash === '#About'}\">\n                <a [routerLink]=\"'/home'\" [fragment]=\"'About'\" [ngClass]=\"{'active': hash === '#About'}\">\n                    О приложении\n                </a>\n            </li>\n            <li (click)=\"hash = '#Pluses'\" class=\"Item\" [ngClass]=\"{'active': hash === '#Pluses'}\">\n                <a [routerLink]=\"'/home'\" [fragment]=\"'Pluses'\" [ngClass]=\"{'active': hash === '#Pluses'}\">\n                    Плюсы\n                </a>\n            </li>\n            <li (click)=\"hash = '#Instruction'\" class=\"Item\" [ngClass]=\"{'active': hash === '#Instruction'}\">\n                <a [routerLink]=\"'/home'\" [fragment]=\"'Instruction'\" [ngClass]=\"{'active': hash === '#Instruction'}\">\n                    Инструкция\n                </a>\n            </li>\n        </ul>\n    </li>\n    <li class=\"Navbar__Item\">\n        <div class=\"Main-Link News-Main-Link\">\n            <a class=\"Main-Link__Text\">Новости</a>\n            <i class=\"Main-Link__OpenClose-Arrow\" (click)=\"location.pathname.split('/')[1] === 'news' ? undefined : checkLinkIsOpen('news') ? closeLink('news') : openLink('news')\" [ngClass]=\"{'Rotated': checkLinkIsOpen('news') || location.pathname.split('/')[1] === 'news'}\"></i>\n        </div>\n        <ul class=\"Links-Container\" *ngIf=\"checkLinkIsOpen('home') || location.pathname.split('/')[1] === 'home'\"></ul>\n    </li>\n    <li class=\"Navbar__Item\">\n        <div class=\"Main-Link Ads-Main-Link\">\n            <a class=\"Main-Link__Text\">Предложения</a>\n            <i class=\"Main-Link__OpenClose-Arrow\" (click)=\"location.pathname.split('/')[1] === 'ads' ? undefined : checkLinkIsOpen('ads') ? closeLink('ads') : openLink('ads')\" [ngClass]=\"{'Rotated': checkLinkIsOpen('ads') || location.pathname.split('/')[1] === 'ads'}\">\n            </i>\n        </div>\n        <ul class=\"Links-Container\" *ngIf=\"checkLinkIsOpen('home') || location.pathname.split('/')[1] === 'home'\"></ul>\n    </li>\n    <li class=\"Navbar__Item\">\n        <div class=\"Main-Link Chats-Main-Link\">\n            <a class=\"Main-Link__Text\">Чаты</a>\n            <i class=\"Main-Link__OpenClose-Arrow\" (click)=\"location.pathname.split('/')[1] === 'chats' ? undefined : checkLinkIsOpen('chats') ? closeLink('chats') : openLink('chats')\" [ngClass]=\"{'Rotated': checkLinkIsOpen('chats') || location.pathname.split('/')[1] === 'chats'}\">\n            </i>\n        </div>\n        <ul class=\"Links-Container\" *ngIf=\"checkLinkIsOpen('home') || location.pathname.split('/')[1] === 'home'\"></ul>\n    </li>\n</ul>","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { IUser } from '../models/user.model';\nimport { AccountService, IRegisterData } from '../services/account.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.sass']\n})\nexport class RegisterComponent implements OnInit {\n  warning?: string\n  registerFormGroup: IRegisterData = {\n    username: \"\",\n    email: \"\",\n    first_name: \"\",\n    last_name: \"\",\n    password: \"\",\n    password2: \"\",\n    profile: {\n      phone: \"\",\n      patronymic: \"\",\n      age: undefined,\n    }\n  }\n  isLoading: boolean = false\n\n  constructor(\n    private _account: AccountService,\n    private _router: Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  register() {\n    this.isLoading = true\n    this._account.register(this.registerFormGroup).subscribe(data => {\n      this.isLoading = false\n      if (data.result) {\n        this._router.navigateByUrl(\"login\")\n      } else {\n        this.warning = data.message\n      }\n    })\n  }\n}\n","<form class=\"Form-Container Login-Form\" #registerForm=\"ngForm\" (ngSubmit)=\"register()\">\n    <account-nav style=\"width: 100%;\"></account-nav>\n    <div class=\"Form-Container__Title\">Регистрация</div>\n    <div class=\"Form-Container__Warning\" *ngIf=\"warning\">{{warning}}</div>\n    <div class=\"Form-Container__Fields-Container\">\n        <div class=\"Field\">\n            <input [name]=\"'username'\" required [placeholder]=\"'Ник'\" [maxLength]=\"64\" [(ngModel)]=\"registerFormGroup.username\" #username=\"ngModel\" />\n            <span *ngIf=\"username.errors?.required && username.touched\">\n                Обязательное поле.\n            </span>\n            <span *ngIf=\"email.errors?.maxlength && email.touched\">\n                Максимальная длина - 64 символа\n            </span>\n        </div>\n        <div class=\"Field\">\n            <input [name]=\"'email'\" required [placeholder]=\"'Email'\" [maxLength]=\"64\" [(ngModel)]=\"registerFormGroup.email\" #email=\"ngModel\" [type]=\"'email'\" />\n            <span *ngIf=\"email.errors?.required && email.touched\">\n                Обязательное поле.\n            </span>\n            <span *ngIf=\"email.errors?.maxlength && email.touched\">\n                Максимальная длина - 64 символа\n            </span>\n        </div>\n        <div class=\"Field\">\n            <input [name]=\"'first_name'\" required [placeholder]=\"'Имя'\" [maxLength]=\"64\" [(ngModel)]=\"registerFormGroup.first_name\" #first_name=\"ngModel\" />\n            <span *ngIf=\"first_name.errors?.required && first_name.touched\">\n                Обязательное полео.\n            </span>\n            <span *ngIf=\"first_name.errors?.maxlength && first_name.touched\">\n                Максимальная длина - 64 символа\n            </span>\n        </div>\n        <div class=\"Field\">\n            <input [name]=\"'last_name'\" required [placeholder]=\"'Фамилия'\" [maxLength]=\"64\" [(ngModel)]=\"registerFormGroup.last_name\" #last_name=\"ngModel\" />\n            <span *ngIf=\"last_name.errors?.required && last_name.touched\">\n                Обязательное полеа.\n            </span>\n            <span *ngIf=\"last_name.errors?.maxlength && last_name.touched\">\n                Максимальная длина - 64 символа\n            </span>\n        </div>\n        <div class=\"Field\">\n            <input [name]=\"'patronymic'\" required [placeholder]=\"'Отчество'\" [maxLength]=\"64\" [(ngModel)]=\"registerFormGroup.profile.patronymic\" #patronymic=\"ngModel\" />\n            <span *ngIf=\"patronymic.errors?.required && patronymic.touched\">\n                Обязательное полеа.\n            </span>\n            <span *ngIf=\"patronymic.errors?.maxlength && patronymic.touched\">\n                Максимальная длина - 64 символа\n            </span>\n        </div>\n        <div class=\"Field\">\n            <input [name]=\"'phone'\" required [placeholder]=\"'Телефон'\" [maxLength]=\"16\" [(ngModel)]=\"registerFormGroup.profile.phone\" #phone=\"ngModel\" />\n            <span *ngIf=\"phone.errors?.required && phone.touched\">\n                Обязательное поле.\n            </span>\n            <span *ngIf=\"phone.errors?.maxlength && phone.touched\">\n                Максимальная длина - 64 символа\n            </span>\n        </div>\n        <div class=\"Field\">\n            <input [name]=\"'age'\" required [placeholder]=\"'Возраст'\" [(ngModel)]=\"registerFormGroup.profile.age\" #age=\"ngModel\" [type]=\"'number'\" />\n            <span *ngIf=\"age.errors?.required && age.touched\">\n                Обязательное поле.\n            </span>\n        </div>\n        <div class=\"Field\">\n            <input [name]=\"'password'\" required pattern=\"\\S*\\d+\\S*\" [placeholder]=\"'Пароль'\" [type]=\"'password'\" [(ngModel)]=\"registerFormGroup.password\" #password=\"ngModel\" />\n            <span *ngIf=\"password.errors?.required && password.touched\">\n                Обязательное поле.\n            </span>\n            <span *ngIf=\"password.errors?.minlength && password.touched\">\n                Пароль должен быть не короче 8 символов.\n            </span>\n            <span *ngIf=\"password.errors?.pattern && password.touched\">\n                Пароль должен включать в себя буквы, цифры и специальные знаки.\n            </span>\n        </div>\n        <div class=\"Field\">\n            <input [name]=\"'password2'\" required pattern=\"\\S*\\d+\\S*\" [placeholder]=\"'Повтор пароля'\" [type]=\"'password'\" [(ngModel)]=\"registerFormGroup.password2\" #password2=\"ngModel\" />\n            <span *ngIf=\"password2.errors?.required && password2.touched\">\n                Обязательное поле.\n            </span>\n            <span *ngIf=\"password2.errors?.minlength && password2.touched\">\n                Пароль должен быть не короче 8 символов.\n            </span>\n            <span *ngIf=\"password2.errors?.pattern && password2.touched\">\n                Пароль должен включать в себя буквы, цифры и специальные знаки.\n            </span>\n            <span class=\"register-form__validation_block\" *ngIf=\"password.touched && password2.touched && password.value != password2.value\">Пароли не совпадают.</span>\n        </div>\n    </div>\n    <button class=\"Form-Container__Button\" [disabled]=\"registerForm.invalid || password.value != password2.value\">{{isLoading ? \"Загрузка...\" : \"Зарегистрироваться\"}}</button>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AccountService } from '../services/account.service';\n\n@Component({\n  selector: 'reset-password-confirm',\n  templateUrl: './reset-password-confirm.component.html',\n  styleUrls: ['./reset-password-confirm.component.sass']\n})\nexport class ResetPasswordConfirmComponent implements OnInit {\n  warning?: {text: string, class: \"ok\" | \"\"}\n  resetPasswordConfirmFormGroup = {\n    new_password1: \"\",\n    new_password2: \"\",\n    uid: \"\",\n    token: \"\"\n  }\n  isLoading: boolean = false\n  result: boolean = false\n\n  constructor(\n    private _route: ActivatedRoute,\n    private _router: Router,\n    private _account: AccountService\n  ) { }\n\n  ngOnInit(): void {\n    this._route.params.subscribe((p) => {\n      this.resetPasswordConfirmFormGroup[\"uid\"] = p[\"uid\"]\n      this.resetPasswordConfirmFormGroup[\"token\"] = p[\"token\"]\n    })\n  }\n\n  resetPasswordConfirm() {\n    this.isLoading = true\n    this._account.resetPasswordConfirm(this.resetPasswordConfirmFormGroup).subscribe(data => {\n      this.result = data.result\n      this.isLoading = false\n      if (data.result) {\n        this.warning = {text: data.message, class: \"ok\"}\n      } else {\n        console.error(data.message)\n      }\n    })\n  }\n}\n","<form class=\"Form-Container Login-Form\" #resetPasswordForm=\"ngForm\" (ngSubmit)=\"resetPasswordConfirm()\">\n    <div class=\"Form-Container__Title\">Сброс пароля</div>\n    <div class=\"Form-Container__Warning\" *ngIf=\"warning\" [ngClass]=\"warning['class']\">{{warning[\"text\"]}}</div>\n    <div class=\"Form-Container__Fields-Container\">\n        <div class=\"Field\">\n            <input [name]=\"'new_password1'\" type=\"password\" minlength=\"8\" pattern=\"\\S*\\d+\\S*\" required [placeholder]=\"'Новый пароль'\" [(ngModel)]=\"resetPasswordConfirmFormGroup.new_password1\" #new_password1=\"ngModel\" />\n            <span *ngIf=\"new_password1.errors?.required && new_password1.touched\">\n                Обязательное поле.\n            </span>\n            <span *ngIf=\"new_password1.errors?.minlength && new_password1.touched\">\n                Пароль должен быть не короче 8 символов.\n            </span>\n            <span *ngIf=\"new_password1.errors?.pattern && new_password1.touched\">\n                Пароль должен включать в себя буквы, цифры и специальные знаки.\n            </span>\n        </div>\n        <div class=\"Field\">\n            <input [name]=\"'new_password2'\" type=\"password\" minlength=\"8\" pattern=\"\\S*\\d+\\S*\" required [placeholder]=\"'Повтор нового пароля'\" [(ngModel)]=\"resetPasswordConfirmFormGroup.new_password2\" #new_password2=\"ngModel\" />\n            <span *ngIf=\"new_password2.errors?.required && new_password2.touched\">\n                Обязательное поле.\n            </span>\n            <span *ngIf=\"new_password2.errors?.minlength && new_password2.touched\">\n                Пароль должен быть не короче 8 символов.\n            </span>\n            <span *ngIf=\"new_password2.errors?.pattern && new_password2.touched\">\n                Пароль должен включать в себя буквы, цифры и специальные знаки.\n            </span>\n            <span class=\"register-form__validation_block\" *ngIf=\"new_password1.touched && new_password2.touched && new_password1.value != new_password2.value\">Пароли не совпадают.</span>\n        </div>\n    </div>\n    <div class=\"Form-Container__Links\" *ngIf=\"result\">\n        <span>Успешно сохранили пароль? <a routerLink=\"/login\">Войти</a></span>\n    </div>\n    <button class=\"Form-Container__Button\" [disabled]=\"resetPasswordForm.invalid || new_password1.value != new_password2.value ||isLoading\">{{isLoading ? \"Загрузка...\" : \"Сохранить\"}}</button>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { AccountService } from '../services/account.service';\n\n@Component({\n  selector: 'reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.sass']\n})\nexport class ResetPasswordComponent implements OnInit {\n  resetPasswordFormGroup = {\n    email: ''\n  }\n  warning?: {text: string, class: \"ok\" | \"\"}\n  isLoading: boolean = false\n\n  constructor(private _account: AccountService) { }\n\n  ngOnInit(): void {\n  }\n\n  resetPassword() {\n    this.isLoading = true\n    this._account.resetPassword(this.resetPasswordFormGroup).subscribe(data => {\n      this.isLoading = false\n      if (data.result) {\n        this.warning = {text: data.message, class: \"ok\"}\n      } else {\n        console.error(data.message)\n      }\n    })\n  }\n\n}\n","<form class=\"Form-Container Login-Form\" #resetPasswordForm=\"ngForm\" (ngSubmit)=\"resetPassword()\">\n    <div class=\"Form-Container__Title\">Сброс пароля</div>\n    <div class=\"Form-Container__Warning\" *ngIf=\"warning\" [ngClass]=\"warning['class']\">{{warning[\"text\"]}}</div>\n    <div class=\"Form-Container__Fields-Container\">\n        <div class=\"Field\">\n            <input [name]=\"'email'\" required [placeholder]=\"'Email'\" [(ngModel)]=\"resetPasswordFormGroup.email\" #email=\"ngModel\" />\n            <span *ngIf=\"email.invalid && email.touched\">\n                Обязательное поле.\n            </span>\n        </div>\n    </div>\n    <button class=\"Form-Container__Button\" [disabled]=\"resetPasswordForm.invalid\">{{isLoading ? \"Загрузка...\" : \"Сбросить\"}}</button>\n</form>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { APIResponse } from '../models/api.model';\nimport { IUser } from '../models/user.model';\n\nexport interface ILoginData {\n  username: string\n  password: string\n}\n\nexport interface IRegisterData {\n  username: string\n  email: string\n  first_name: string\n  last_name: string\n  password: string\n  password2: string\n  profile: {\n    patronymic: string\n    phone: string\n    age?: number\n  }\n}\n\nexport interface IResetPasswordData {\n  email: string\n}\n\nexport interface IResetPasswordConfirmData {\n  new_password1: string\n  new_password2: string\n  uid: string\n  token: string\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService {\n\n  constructor(\n    private _http: HttpClient\n  ) { }\n\n  getUser() {\n    let token = this._getCookie(\"csrftoken\")\n    return this._http.get<APIResponse<{user?: IUser}>>(\"/api/v1/account/\", {\n      headers: {\"XCSRF-Token\": token}\n    })\n  }\n\n  logout() {\n    let token = this._getCookie(\"csrftoken\")\n    return this._http.post<APIResponse>(\"/api/v1/account/logout/\", {csrfmiddlewaretoken: token}, {\n      headers: {\"X-CSRFToken\": token}\n    })\n  }\n\n  login(data: ILoginData) {\n    let token = this._getCookie(\"csrftoken\")\n    return this._http.post<APIResponse<{user?: IUser}>>(\"/api/v1/account/login/\", {csrfmiddlewaretoken: token, ...data}, {\n      headers: {\"X-CSRFToken\": token}\n    })\n  }\n\n  register(data: IRegisterData) {\n    let token = this._getCookie(\"csrftoken\")\n    return this._http.post<APIResponse<{user?: IUser}>>(\"/api/v1/account/register/\", {csrfmiddlewaretoken: token, ...data}, {\n      headers: {\"X-CSRFToken\": token}\n    })\n  }\n\n  resetPassword(data: IResetPasswordData) {\n    let token = this._getCookie(\"csrftoken\")\n    return this._http.post<APIResponse>(\"/api/v1/account/password/reset/\", {csrfmiddlewaretoken: token, ...data}, {\n      headers: {\"X-CSRFToken\": token}\n    })\n  }\n\n  resetPasswordConfirm(data: IResetPasswordConfirmData) {\n    let token = this._getCookie(\"csrftoken\")\n    return this._http.post<APIResponse>(`/api/v1/account/password/reset/confirm/${data.uid}/${data.token}/`, {csrfmiddlewaretoken: token, ...data}, {\n      headers: {\"X-CSRFToken\": token}\n    })\n  }\n\n  private _getCookie(name: string): string {\n    let ca: Array<string> = document.cookie.split(';');\n    let caLen: number = ca.length;\n    let cookieName = `${name}=`;\n    let c: string;\n    for (let i: number = 0; i < caLen; i += 1) {\n        c = ca[i].replace(/^\\s+/g, '');\n        if (c.indexOf(cookieName) == 0) {\n            return c.substring(cookieName.length, c.length);\n        }\n    }\n    return '';\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///"}